include "TriggerLibs/NativeLib"

include "Lib6F383DA1_h"

//--------------------------------------------------------------------------------------------------
// Library: BattleReport
//--------------------------------------------------------------------------------------------------
// External Library Initialization
void lib6F383DA1_InitLibraries () {
    libNtve_InitVariables();
}

// Variable Initialization
bool lib6F383DA1_InitVariables_completed = false;

void lib6F383DA1_InitVariables () {
    int init_i1;
    int init_i2;
    int init_j2;

    if (lib6F383DA1_InitVariables_completed) {
        return;
    }

    lib6F383DA1_InitVariables_completed = true;

    lib6F383DA1_gv_GAME_TICK = (GameGetSpeed() * (1.0 / 32.0));
    for (init_i1 = 0; init_i1 <= 1; init_i1 += 1) {
        for (init_i2 = 0; init_i2 <= 9; init_i2 += 1) {
            lib6F383DA1_gv_battleReport.lv_playerBattleStats[init_i1].lv_abilitiesUsedCustomTooltips[init_i2] = "";
        }
    }
    for (init_i1 = 0; init_i1 <= 1; init_i1 += 1) {
        lib6F383DA1_gv_battleReport.lv_playerResourcesCollected[init_i1].lv_minerals = 50;
    }
    lib6F383DA1_gv_battleReport.lv_UI.lv_battleReportReadyToClear = true;
    lib6F383DA1_gv_battleReport.lv_UI.lv_battleReportContainer = c_invalidDialogControlId;
    lib6F383DA1_gv_battleReport.lv_UI.lv_showHideButton = c_invalidDialogControlId;
    lib6F383DA1_gv_battleReport.lv_UI.lv_battleLengthTimer = c_invalidDialogControlId;
    lib6F383DA1_gv_battleReport.lv_UI.lv_countdownWarningLabel = c_invalidDialogControlId;
    lib6F383DA1_gv_battleReport.lv_UI.lv_countdownTimer = c_invalidDialogControlId;
    for (init_i2 = 0; init_i2 <= 1; init_i2 += 1) {
        lib6F383DA1_gv_battleReport.lv_UI.lv_playerId[init_i2] = c_invalidDialogControlId;
    }
    for (init_i2 = 0; init_i2 <= 1; init_i2 += 1) {
        lib6F383DA1_gv_battleReport.lv_UI.lv_playerName[init_i2] = c_invalidDialogControlId;
    }
    for (init_i2 = 0; init_i2 <= 1; init_i2 += 1) {
        lib6F383DA1_gv_battleReport.lv_UI.lv_playerNameBG[init_i2] = c_invalidDialogControlId;
    }
    for (init_i2 = 0; init_i2 <= 1; init_i2 += 1) {
        lib6F383DA1_gv_battleReport.lv_UI.lv_playerRaceIcon[init_i2] = c_invalidDialogControlId;
    }
    for (init_i2 = 0; init_i2 <= 1; init_i2 += 1) {
        lib6F383DA1_gv_battleReport.lv_UI.lv_damageDealt[init_i2] = c_invalidDialogControlId;
    }
    lib6F383DA1_gv_battleReport.lv_UI.lv_healthbarFrame = c_invalidDialogControlId;
    for (init_i2 = 0; init_i2 <= 1; init_i2 += 1) {
        lib6F383DA1_gv_battleReport.lv_UI.lv_healthbarCurrent[init_i2] = c_invalidDialogControlId;
    }
    for (init_i2 = 0; init_i2 <= 1; init_i2 += 1) {
        lib6F383DA1_gv_battleReport.lv_UI.lv_healthbarMVPUnitDmg[init_i2] = c_invalidDialogControlId;
    }
    for (init_i2 = 0; init_i2 <= 1; init_i2 += 1) {
        for (init_j2 = 0; init_j2 <= 11; init_j2 += 1) {
            lib6F383DA1_gv_battleReport.lv_UI.lv_killedUnitButtons[init_i2][init_j2] = c_invalidDialogControlId;
        }
    }
    for (init_i2 = 0; init_i2 <= 1; init_i2 += 1) {
        for (init_j2 = 0; init_j2 <= 11; init_j2 += 1) {
            lib6F383DA1_gv_battleReport.lv_UI.lv_killedUnitCountBG[init_i2][init_j2] = c_invalidDialogControlId;
        }
    }
    for (init_i2 = 0; init_i2 <= 1; init_i2 += 1) {
        for (init_j2 = 0; init_j2 <= 11; init_j2 += 1) {
            lib6F383DA1_gv_battleReport.lv_UI.lv_killledUnitTypes[init_i2][init_j2] = c_invalidDialogControlId;
        }
    }
    for (init_i2 = 0; init_i2 <= 1; init_i2 += 1) {
        for (init_j2 = 0; init_j2 <= 11; init_j2 += 1) {
            lib6F383DA1_gv_battleReport.lv_UI.lv_killedUnitCounts[init_i2][init_j2] = c_invalidDialogControlId;
        }
    }
    for (init_i2 = 0; init_i2 <= 1; init_i2 += 1) {
        lib6F383DA1_gv_battleReport.lv_UI.lv_killedUnitTypeCount[init_i2] = c_invalidDialogControlId;
    }
    for (init_i2 = 0; init_i2 <= 1; init_i2 += 1) {
        lib6F383DA1_gv_battleReport.lv_UI.lv_totalUnitsLost[init_i2] = c_invalidDialogControlId;
    }
    for (init_i2 = 0; init_i2 <= 1; init_i2 += 1) {
        lib6F383DA1_gv_battleReport.lv_UI.lv_mineralsLostBar[init_i2] = c_invalidDialogControlId;
    }
    for (init_i2 = 0; init_i2 <= 1; init_i2 += 1) {
        lib6F383DA1_gv_battleReport.lv_UI.lv_gasLostBar[init_i2] = c_invalidDialogControlId;
    }
    for (init_i2 = 0; init_i2 <= 1; init_i2 += 1) {
        lib6F383DA1_gv_battleReport.lv_UI.lv_mineralsLostIcon[init_i2] = c_invalidDialogControlId;
    }
    for (init_i2 = 0; init_i2 <= 1; init_i2 += 1) {
        lib6F383DA1_gv_battleReport.lv_UI.lv_gasLostIcon[init_i2] = c_invalidDialogControlId;
    }
    for (init_i2 = 0; init_i2 <= 1; init_i2 += 1) {
        lib6F383DA1_gv_battleReport.lv_UI.lv_suppliesLostIcon[init_i2] = c_invalidDialogControlId;
    }
    for (init_i2 = 0; init_i2 <= 1; init_i2 += 1) {
        lib6F383DA1_gv_battleReport.lv_UI.lv_mineralsLost[init_i2] = c_invalidDialogControlId;
    }
    for (init_i2 = 0; init_i2 <= 1; init_i2 += 1) {
        lib6F383DA1_gv_battleReport.lv_UI.lv_gasLost[init_i2] = c_invalidDialogControlId;
    }
    for (init_i2 = 0; init_i2 <= 1; init_i2 += 1) {
        lib6F383DA1_gv_battleReport.lv_UI.lv_suppliesLost[init_i2] = c_invalidDialogControlId;
    }
    for (init_i2 = 0; init_i2 <= 1; init_i2 += 1) {
        for (init_j2 = 0; init_j2 <= 9; init_j2 += 1) {
            lib6F383DA1_gv_battleReport.lv_UI.lv_abilityButtons[init_i2][init_j2] = c_invalidDialogControlId;
        }
    }
    for (init_i2 = 0; init_i2 <= 1; init_i2 += 1) {
        for (init_j2 = 0; init_j2 <= 9; init_j2 += 1) {
            lib6F383DA1_gv_battleReport.lv_UI.lv_abilityCountBG[init_i2][init_j2] = c_invalidDialogControlId;
        }
    }
    for (init_i2 = 0; init_i2 <= 1; init_i2 += 1) {
        for (init_j2 = 0; init_j2 <= 9; init_j2 += 1) {
            lib6F383DA1_gv_battleReport.lv_UI.lv_abilityTypes[init_i2][init_j2] = c_invalidDialogControlId;
        }
    }
    for (init_i2 = 0; init_i2 <= 1; init_i2 += 1) {
        for (init_j2 = 0; init_j2 <= 9; init_j2 += 1) {
            lib6F383DA1_gv_battleReport.lv_UI.lv_abilityTypeCounts[init_i2][init_j2] = c_invalidDialogControlId;
        }
    }
    for (init_i2 = 0; init_i2 <= 1; init_i2 += 1) {
        lib6F383DA1_gv_battleReport.lv_UI.lv_abilitiesUsed[init_i2] = c_invalidDialogControlId;
    }
    for (init_i2 = 0; init_i2 <= 1; init_i2 += 1) {
        lib6F383DA1_gv_battleReport.lv_UI.lv_mVPUnitTypeButtons[init_i2] = c_invalidDialogControlId;
    }
    for (init_i2 = 0; init_i2 <= 1; init_i2 += 1) {
        lib6F383DA1_gv_battleReport.lv_UI.lv_mVPUnitTypeIcon[init_i2] = c_invalidDialogControlId;
    }
    for (init_i2 = 0; init_i2 <= 1; init_i2 += 1) {
        lib6F383DA1_gv_battleReport.lv_UI.lv_mVPUnitTypeDmg[init_i2] = c_invalidDialogControlId;
    }
    lib6F383DA1_gv_battleReport.lv_UI2.lv_container = c_invalidDialogControlId;
    for (init_i2 = 0; init_i2 <= 1; init_i2 += 1) {
        lib6F383DA1_gv_battleReport.lv_UI2.lv_minerals[init_i2] = c_invalidDialogControlId;
    }
    for (init_i2 = 0; init_i2 <= 1; init_i2 += 1) {
        lib6F383DA1_gv_battleReport.lv_UI2.lv_gas[init_i2] = c_invalidDialogControlId;
    }
    lib6F383DA1_gv_battleReport.lv_battleEndingTimer = TimerCreate();
    lib6F383DA1_gv_battleReport.lv_battleReportDisplayTimer = TimerCreate();
}

// Functions
void lib6F383DA1_gf_setPlayerRaceIcons (int lp_playerSlot, string lp_race) {
    // Automatic Variable Declarations
    string auto1F7F525F_val;

    // Implementation
    auto1F7F525F_val = lp_race;
    if (auto1F7F525F_val == "Terr") {
        libNtve_gf_SetDialogItemImage(lib6F383DA1_gv_battleReport.lv_UI.lv_playerRaceIcon[lp_playerSlot], "Assets\\Textures\\ui_battlenet_glues_scorescreen_raceicon_terr.dds", PlayerGroupAll());
        libNtve_gf_SetDialogItemImage(lib6F383DA1_gv_battleReport.lv_UI.lv_mineralsLostIcon[lp_playerSlot], "Assets\\Textures\\icon-mineral-nobg.dds", PlayerGroupAll());
        libNtve_gf_SetDialogItemImage(lib6F383DA1_gv_battleReport.lv_UI.lv_gasLostIcon[lp_playerSlot], "Assets\\Textures\\icon-gas-terran-nobg.dds", PlayerGroupAll());
        libNtve_gf_SetDialogItemImage(lib6F383DA1_gv_battleReport.lv_UI.lv_suppliesLostIcon[lp_playerSlot], "Assets\\Textures\\icon-supply-terran_nobg.dds", PlayerGroupAll());
    }
    else if (auto1F7F525F_val == "Zerg") {
        libNtve_gf_SetDialogItemImage(lib6F383DA1_gv_battleReport.lv_UI.lv_playerRaceIcon[lp_playerSlot], "Assets\\Textures\\ui_battlenet_glues_scorescreen_raceicon_zerg.dds", PlayerGroupAll());
        libNtve_gf_SetDialogItemImage(lib6F383DA1_gv_battleReport.lv_UI.lv_mineralsLostIcon[lp_playerSlot], "Assets\\Textures\\icon-mineral-nobg.dds", PlayerGroupAll());
        libNtve_gf_SetDialogItemImage(lib6F383DA1_gv_battleReport.lv_UI.lv_gasLostIcon[lp_playerSlot], "Assets\\Textures\\icon-gas-zerg-nobg.dds", PlayerGroupAll());
        libNtve_gf_SetDialogItemImage(lib6F383DA1_gv_battleReport.lv_UI.lv_suppliesLostIcon[lp_playerSlot], "Assets\\Textures\\icon-supply-zerg_nobg.dds", PlayerGroupAll());
    }
    else if (auto1F7F525F_val == "Prot") {
        libNtve_gf_SetDialogItemImage(lib6F383DA1_gv_battleReport.lv_UI.lv_playerRaceIcon[lp_playerSlot], "Assets\\Textures\\ui_battlenet_glues_scorescreen_raceicon_prot.dds", PlayerGroupAll());
        libNtve_gf_SetDialogItemImage(lib6F383DA1_gv_battleReport.lv_UI.lv_mineralsLostIcon[lp_playerSlot], "Assets\\Textures\\icon-mineral-nobg.dds", PlayerGroupAll());
        libNtve_gf_SetDialogItemImage(lib6F383DA1_gv_battleReport.lv_UI.lv_gasLostIcon[lp_playerSlot], "Assets\\Textures\\icon-gas-protoss-nobg.dds", PlayerGroupAll());
        libNtve_gf_SetDialogItemImage(lib6F383DA1_gv_battleReport.lv_UI.lv_suppliesLostIcon[lp_playerSlot], "Assets\\Textures\\icon-supply-protoss_nobg.dds", PlayerGroupAll());
    }
    else if (auto1F7F525F_val == "BWTe") {
        libNtve_gf_SetDialogItemImage(lib6F383DA1_gv_battleReport.lv_UI.lv_playerRaceIcon[lp_playerSlot], "Assets\\Textures\\ui_battlenet_glues_scorescreen_raceicon_terr.dds", PlayerGroupAll());
        libNtve_gf_SetDialogItemImage(lib6F383DA1_gv_battleReport.lv_UI.lv_mineralsLostIcon[lp_playerSlot], "Assets\\Textures\\icon-mineral-nobg.dds", PlayerGroupAll());
        libNtve_gf_SetDialogItemImage(lib6F383DA1_gv_battleReport.lv_UI.lv_gasLostIcon[lp_playerSlot], "Assets\\Textures\\icon-gas-terran-nobg.dds", PlayerGroupAll());
        libNtve_gf_SetDialogItemImage(lib6F383DA1_gv_battleReport.lv_UI.lv_suppliesLostIcon[lp_playerSlot], "Assets\\Textures\\icon-supply-BWTerran_nobg.dds", PlayerGroupAll());
    }
    else if (auto1F7F525F_val == "BWZe") {
        libNtve_gf_SetDialogItemImage(lib6F383DA1_gv_battleReport.lv_UI.lv_playerRaceIcon[lp_playerSlot], "Assets\\Textures\\ui_battlenet_glues_scorescreen_raceicon_zerg.dds", PlayerGroupAll());
        libNtve_gf_SetDialogItemImage(lib6F383DA1_gv_battleReport.lv_UI.lv_mineralsLostIcon[lp_playerSlot], "Assets\\Textures\\icon-mineral-nobg.dds", PlayerGroupAll());
        libNtve_gf_SetDialogItemImage(lib6F383DA1_gv_battleReport.lv_UI.lv_gasLostIcon[lp_playerSlot], "Assets\\Textures\\icon-gas-zerg-nobg.dds", PlayerGroupAll());
        libNtve_gf_SetDialogItemImage(lib6F383DA1_gv_battleReport.lv_UI.lv_suppliesLostIcon[lp_playerSlot], "Assets\\Textures\\icon-supply-zerg_nobg.dds", PlayerGroupAll());
    }
    else if (auto1F7F525F_val == "BWPr") {
        libNtve_gf_SetDialogItemImage(lib6F383DA1_gv_battleReport.lv_UI.lv_playerRaceIcon[lp_playerSlot], "Assets\\Textures\\ui_battlenet_glues_scorescreen_raceicon_prot.dds", PlayerGroupAll());
        libNtve_gf_SetDialogItemImage(lib6F383DA1_gv_battleReport.lv_UI.lv_mineralsLostIcon[lp_playerSlot], "Assets\\Textures\\icon-mineral-nobg.dds", PlayerGroupAll());
        libNtve_gf_SetDialogItemImage(lib6F383DA1_gv_battleReport.lv_UI.lv_gasLostIcon[lp_playerSlot], "Assets\\Textures\\icon-gas-protoss-nobg.dds", PlayerGroupAll());
        libNtve_gf_SetDialogItemImage(lib6F383DA1_gv_battleReport.lv_UI.lv_suppliesLostIcon[lp_playerSlot], "Assets\\Textures\\icon-supply-protoss_nobg.dds", PlayerGroupAll());
    }
    else {
    }
}

string lib6F383DA1_gf_ZeroPadInt (int lp_int, int lp_length) {
    // Variable Declarations
    string lv_str;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_str = "";

    // Implementation
    lv_str = IntToString(lp_int);
    while ((StringLength(lv_str) < lp_length)) {
        lv_str = ("0" + lv_str);
    }
    return lv_str;
}

trigger auto_lib6F383DA1_gf_startBattleTimer_Trigger = null;

void lib6F383DA1_gf_startBattleTimer () {
    if (auto_lib6F383DA1_gf_startBattleTimer_Trigger == null) {
        auto_lib6F383DA1_gf_startBattleTimer_Trigger = TriggerCreate("auto_lib6F383DA1_gf_startBattleTimer_TriggerFunc");
    }

    TriggerExecute(auto_lib6F383DA1_gf_startBattleTimer_Trigger, false, false);
}

bool auto_lib6F383DA1_gf_startBattleTimer_TriggerFunc (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Implementation
    while ((TriggerIsEnabled(TriggerGetCurrent()) == true) && (lib6F383DA1_gf_fightStarted() == true)) {
        lib6F383DA1_gv_battleReport.lv_battleLengthSeconds += 1;
        lib6F383DA1_gf_updateBattleLengthTimerDisplay();
        Wait(1.0, c_timeReal);
    }
    return true;
}

void lib6F383DA1_gf_updateBattleLengthTimerDisplay () {
    // Automatic Variable Declarations
    // Implementation
    if (lib6F383DA1_gf_isOKToClearReport()) {
        libNtve_gf_SetDialogItemText(lib6F383DA1_gv_battleReport.lv_UI.lv_battleLengthTimer, TextTimeFormat(StringToText("<mintotal/>:<sec2/>"), lib6F383DA1_gv_battleReport.lv_battleLengthSeconds), PlayerGroupAll());
    }

}

bool lib6F383DA1_gf_fightStarted () {
    // Automatic Variable Declarations
    // Implementation
    return lib6F383DA1_gv_battleReport.lv_playersAreFighting;
}

bool lib6F383DA1_gf_isOKToClearReport () {
    // Automatic Variable Declarations
    // Implementation
    return lib6F383DA1_gv_battleReport.lv_UI.lv_battleReportReadyToClear;
}

void lib6F383DA1_gf_updateBattleReportValues () {
    // Variable Declarations
    int lv_playerSlot;
    fixed lv_maxBarWidth;

    // Automatic Variable Declarations
    const int autoFB27AAC7_ae = 1;
    const int autoFB27AAC7_ai = 1;

    // Variable Initialization
    lv_maxBarWidth = lib6F383DA1_gv_BAR_GRAPH_WIDTH;

    // Implementation
    lib6F383DA1_gf_updateBattleLengthTimerDisplay();
    lv_playerSlot = 0;
    for ( ; ( (autoFB27AAC7_ai >= 0 && lv_playerSlot <= autoFB27AAC7_ae) || (autoFB27AAC7_ai < 0 && lv_playerSlot >= autoFB27AAC7_ae) ) ; lv_playerSlot += autoFB27AAC7_ai ) {
        lib6F383DA1_gf_updateResourcesLostDisplay(lv_playerSlot);
        lib6F383DA1_gf_updateResourcesLostGraphs(lv_playerSlot, lib6F383DA1_gf_getTotalResourcesLost(), FixedToInt(lv_maxBarWidth));
        lib6F383DA1_gf_updateDamageDisplay(lv_playerSlot, lv_maxBarWidth);
        lib6F383DA1_gf_refreshUnitsLostButtons(lv_playerSlot);
        lib6F383DA1_gf_refreshAbilityUsedButtons(lv_playerSlot);
        lib6F383DA1_gf_updateMVPUnitTypeStats(lv_playerSlot, lib6F383DA1_gf_getMVPUnitTypeSlotIndex(lv_playerSlot));
        lib6F383DA1_gf_updateMVPUnitTypeBarGraphs();
    }
}

trigger auto_lib6F383DA1_gf_updateClearReportTimer_Trigger = null;

void lib6F383DA1_gf_updateClearReportTimer () {
    if (auto_lib6F383DA1_gf_updateClearReportTimer_Trigger == null) {
        auto_lib6F383DA1_gf_updateClearReportTimer_Trigger = TriggerCreate("auto_lib6F383DA1_gf_updateClearReportTimer_TriggerFunc");
    }

    TriggerExecute(auto_lib6F383DA1_gf_updateClearReportTimer_Trigger, false, false);
}

bool auto_lib6F383DA1_gf_updateClearReportTimer_TriggerFunc (bool testConds, bool runActions) {
    // Variable Declarations
    timer lv_timer;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_timer = lib6F383DA1_gv_battleReport.lv_battleReportDisplayTimer;

    // Implementation
    while ((TriggerIsEnabled(TriggerGetCurrent()) == true) && (TimerGetRemaining(lv_timer) > 0.0)) {
        if (lib6F383DA1_gf_fightStarted() && (TimerGetRemaining(lv_timer) < 6.0)) {
            DialogControlSetVisible(lib6F383DA1_gv_battleReport.lv_UI.lv_countdownTimer, PlayerGroupAll(), true);
            DialogControlSetVisible(lib6F383DA1_gv_battleReport.lv_UI.lv_countdownWarningLabel, PlayerGroupAll(), true);
            libNtve_gf_SetDialogItemText(lib6F383DA1_gv_battleReport.lv_UI.lv_countdownTimer, TextTimeFormat(StringToText("<mintotal/>:<sec2/>"), FixedToInt(TimerGetRemaining(lv_timer))), PlayerGroupAll());
        }

        Wait(lib6F383DA1_gv_GAME_TICK, c_timeReal);
    }
    DialogControlSetVisible(lib6F383DA1_gv_battleReport.lv_UI.lv_countdownWarningLabel, PlayerGroupAll(), false);
    DialogControlSetVisible(lib6F383DA1_gv_battleReport.lv_UI.lv_countdownTimer, PlayerGroupAll(), false);
    return true;
}

void lib6F383DA1_gf_clearBattleReportData (int lp_playerSlot) {
    // Variable Declarations
    int lv_i;

    // Automatic Variable Declarations
    const int auto88DE45E9_ae = 11;
    const int auto88DE45E9_ai = 1;
    const int autoE1C5BFE6_ae = 9;
    const int autoE1C5BFE6_ai = 1;
    const int autoAFC80BD0_ae = 31;
    const int autoAFC80BD0_ai = 1;

    // Variable Initialization

    // Implementation
    libNtve_gf_StopTimer(lib6F383DA1_gv_battleReport.lv_battleEndingTimer);
    TimerRestart(lib6F383DA1_gv_battleReport.lv_battleEndingTimer);
    lib6F383DA1_gv_battleReport.lv_playerBattleStats[lp_playerSlot].lv_damageDealt = 0;
    lib6F383DA1_gv_battleReport.lv_playerBattleStats[lp_playerSlot].lv_totalUnitsLost = 0;
    lib6F383DA1_gv_battleReport.lv_playerBattleStats[lp_playerSlot].lv_mineralsLost = 0;
    lib6F383DA1_gv_battleReport.lv_playerBattleStats[lp_playerSlot].lv_gasLost = 0;
    lib6F383DA1_gv_battleReport.lv_playerBattleStats[lp_playerSlot].lv_suppliesLost = 0;
    lib6F383DA1_gv_battleReport.lv_playerBattleStats[lp_playerSlot].lv_lostUnitTypeCount = 0;
    lv_i = 0;
    for ( ; ( (auto88DE45E9_ai >= 0 && lv_i <= auto88DE45E9_ae) || (auto88DE45E9_ai < 0 && lv_i >= auto88DE45E9_ae) ) ; lv_i += auto88DE45E9_ai ) {
        lib6F383DA1_gv_battleReport.lv_playerBattleStats[lp_playerSlot].lv_lostUnitTypes[lv_i] = "";
        lib6F383DA1_gv_battleReport.lv_playerBattleStats[lp_playerSlot].lv_lostUnitTypeCounts[lv_i] = 0;
    }
    lib6F383DA1_gv_battleReport.lv_playerBattleStats[lp_playerSlot].lv_abilitiesUsedCount = 0;
    lv_i = 0;
    for ( ; ( (autoE1C5BFE6_ai >= 0 && lv_i <= autoE1C5BFE6_ae) || (autoE1C5BFE6_ai < 0 && lv_i >= autoE1C5BFE6_ae) ) ; lv_i += autoE1C5BFE6_ai ) {
        lib6F383DA1_gv_battleReport.lv_playerBattleStats[lp_playerSlot].lv_abilitiesUsed[lv_i] = "";
        lib6F383DA1_gv_battleReport.lv_playerBattleStats[lp_playerSlot].lv_abilitiesUsedCounts[lv_i] = 0;
        lib6F383DA1_gv_battleReport.lv_playerBattleStats[lp_playerSlot].lv_abilitiesUsedCustomImages[lv_i] = "";
        lib6F383DA1_gv_battleReport.lv_playerBattleStats[lp_playerSlot].lv_abilitiesUsedCustomTooltips[lv_i] = "";
    }
    lib6F383DA1_gv_battleReport.lv_playerBattleStats[lp_playerSlot].lv_mvpUnitList.lv_unitTypeCount = 0;
    lv_i = 0;
    for ( ; ( (autoAFC80BD0_ai >= 0 && lv_i <= autoAFC80BD0_ae) || (autoAFC80BD0_ai < 0 && lv_i >= autoAFC80BD0_ae) ) ; lv_i += autoAFC80BD0_ai ) {
        lib6F383DA1_gv_battleReport.lv_playerBattleStats[lp_playerSlot].lv_mvpUnitList.lv_unitTypes[lv_i] = "";
        lib6F383DA1_gv_battleReport.lv_playerBattleStats[lp_playerSlot].lv_mvpUnitList.lv_unitTypeDamage[lv_i] = 0.0;
    }
}

void lib6F383DA1_gf_clearBattleReportUI (int lp_playerSlot) {
    // Variable Declarations
    int lv_i;

    // Automatic Variable Declarations
    const int autoAC78BCC7_ae = 11;
    const int autoAC78BCC7_ai = 1;
    const int auto41F5F2AE_ae = 9;
    const int auto41F5F2AE_ai = 1;

    // Variable Initialization

    // Implementation
    libNtve_gf_SetDialogItemText(lib6F383DA1_gv_battleReport.lv_UI.lv_battleLengthTimer, StringExternal("Param/Value/lib_6F383DA1_D573048F"), PlayerGroupAll());
    libNtve_gf_SetDialogItemText(lib6F383DA1_gv_battleReport.lv_UI.lv_damageDealt[lp_playerSlot], StringExternal("Param/Value/lib_6F383DA1_89489099"), PlayerGroupAll());
    DialogControlSetVisible(lib6F383DA1_gv_battleReport.lv_UI.lv_healthbarCurrent[lp_playerSlot], PlayerGroupAll(), false);
    DialogControlSetSize(lib6F383DA1_gv_battleReport.lv_UI.lv_healthbarCurrent[lp_playerSlot], PlayerGroupAll(), 1, 26);
    libNtve_gf_SetDialogItemText(lib6F383DA1_gv_battleReport.lv_UI.lv_totalUnitsLost[lp_playerSlot], StringExternal("Param/Value/lib_6F383DA1_7561FDA9"), PlayerGroupAll());
    libNtve_gf_SetDialogItemText(lib6F383DA1_gv_battleReport.lv_UI.lv_mineralsLost[lp_playerSlot], StringExternal("Param/Value/lib_6F383DA1_582C4146"), PlayerGroupAll());
    libNtve_gf_SetDialogItemText(lib6F383DA1_gv_battleReport.lv_UI.lv_gasLost[lp_playerSlot], StringExternal("Param/Value/lib_6F383DA1_9F258A98"), PlayerGroupAll());
    libNtve_gf_SetDialogItemText(lib6F383DA1_gv_battleReport.lv_UI.lv_suppliesLost[lp_playerSlot], StringExternal("Param/Value/lib_6F383DA1_AC641193"), PlayerGroupAll());
    DialogControlSetVisible(lib6F383DA1_gv_battleReport.lv_UI.lv_mineralsLostBar[lp_playerSlot], PlayerGroupAll(), false);
    DialogControlSetVisible(lib6F383DA1_gv_battleReport.lv_UI.lv_gasLostBar[lp_playerSlot], PlayerGroupAll(), false);
    lv_i = 0;
    for ( ; ( (autoAC78BCC7_ai >= 0 && lv_i <= autoAC78BCC7_ae) || (autoAC78BCC7_ai < 0 && lv_i >= autoAC78BCC7_ae) ) ; lv_i += autoAC78BCC7_ai ) {
        libNtve_gf_SetDialogItemImage(lib6F383DA1_gv_battleReport.lv_UI.lv_killledUnitTypes[lp_playerSlot][lv_i], "Assets\\Textures\\black.dds", PlayerGroupAll());
        libNtve_gf_SetDialogItemImage2(lib6F383DA1_gv_battleReport.lv_UI.lv_killedUnitButtons[lp_playerSlot][lv_i], "Assets\\Textures\\buttonBG.dds", PlayerGroupAll());
        DialogControlSetVisible(lib6F383DA1_gv_battleReport.lv_UI.lv_killedUnitCountBG[lp_playerSlot][lv_i], PlayerGroupAll(), false);
        libNtve_gf_SetDialogItemText(lib6F383DA1_gv_battleReport.lv_UI.lv_killedUnitCounts[lp_playerSlot][lv_i], StringToText(""), PlayerGroupAll());
        libNtve_gf_SetDialogItemTooltip(lib6F383DA1_gv_battleReport.lv_UI.lv_killedUnitButtons[lp_playerSlot][lv_i], StringToText(""), PlayerGroupAll());
    }
    lv_i = 0;
    for ( ; ( (auto41F5F2AE_ai >= 0 && lv_i <= auto41F5F2AE_ae) || (auto41F5F2AE_ai < 0 && lv_i >= auto41F5F2AE_ae) ) ; lv_i += auto41F5F2AE_ai ) {
        libNtve_gf_SetDialogItemImage(lib6F383DA1_gv_battleReport.lv_UI.lv_abilityTypes[lp_playerSlot][lv_i], "Assets\\Textures\\black.dds", PlayerGroupAll());
        libNtve_gf_SetDialogItemText(lib6F383DA1_gv_battleReport.lv_UI.lv_abilityTypeCounts[lp_playerSlot][lv_i], StringToText(""), PlayerGroupAll());
        DialogControlSetVisible(lib6F383DA1_gv_battleReport.lv_UI.lv_abilityCountBG[lp_playerSlot][lv_i], PlayerGroupAll(), false);
        libNtve_gf_SetDialogItemTooltip(lib6F383DA1_gv_battleReport.lv_UI.lv_abilityButtons[lp_playerSlot][lv_i], StringToText(""), PlayerGroupAll());
        libNtve_gf_SetDialogItemImage2(lib6F383DA1_gv_battleReport.lv_UI.lv_abilityButtons[lp_playerSlot][lv_i], "Assets\\Textures\\buttonBG.dds", PlayerGroupAll());
    }
    libNtve_gf_SetDialogItemImage(lib6F383DA1_gv_battleReport.lv_UI.lv_mVPUnitTypeIcon[lp_playerSlot], "Assets\\Textures\\black.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemText(lib6F383DA1_gv_battleReport.lv_UI.lv_mVPUnitTypeDmg[lp_playerSlot], StringToText(""), PlayerGroupAll());
    libNtve_gf_SetDialogItemImage2(lib6F383DA1_gv_battleReport.lv_UI.lv_mVPUnitTypeButtons[lp_playerSlot], "Assets\\Textures\\black.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemTooltip(lib6F383DA1_gv_battleReport.lv_UI.lv_mVPUnitTypeButtons[lp_playerSlot], StringToText(""), PlayerGroupAll());
    DialogControlSetVisible(lib6F383DA1_gv_battleReport.lv_UI.lv_healthbarMVPUnitDmg[lp_playerSlot], PlayerGroupAll(), false);
}

void lib6F383DA1_gf_updateMVPList (int lp_playerSlot, string lp_unitType, fixed lp_damage) {
    // Variable Declarations
    int lv_saveToSlot;
    int lv_openSlot;
    string lv_image;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    lv_saveToSlot = lib6F383DA1_gf_getMVPUnitSlot(lp_playerSlot, lp_unitType);
    if ((lv_saveToSlot > -1)) {
    }
    else {
        lv_saveToSlot = lib6F383DA1_gf_getNextOpenMVPSlot(lp_playerSlot);
        if ((lib6F383DA1_gv_battleReport.lv_playerBattleStats[lp_playerSlot].lv_mvpUnitList.lv_unitTypeCount < 32)) {
            lib6F383DA1_gv_battleReport.lv_playerBattleStats[lp_playerSlot].lv_mvpUnitList.lv_unitTypes[lv_saveToSlot] = lp_unitType;
            lib6F383DA1_gv_battleReport.lv_playerBattleStats[lp_playerSlot].lv_mvpUnitList.lv_unitTypeCount += 1;
        }

    }
    lib6F383DA1_gv_battleReport.lv_playerBattleStats[lp_playerSlot].lv_mvpUnitList.lv_unitTypeDamage[lv_saveToSlot] += lp_damage;
    lib6F383DA1_gf_updateMVPUnitTypeStats(lp_playerSlot, lib6F383DA1_gf_getMVPUnitTypeSlotIndex(lp_playerSlot));
}

void lib6F383DA1_gf_updateMVPUnitTypeStats (int lp_playerSlot, int lp_mvpUnitIndex) {
    // Variable Declarations
    string lv_unitType;
    fixed lv_mvpUnitDamage;
    fixed lv_playerDamageDealt;
    fixed lv_percentDamage;
    string lv_percentStr;
    string lv_img;
    fixed lv_barWidth;
    fixed lv_newBarWidth;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_unitType = "";
    lv_percentStr = "";

    // Implementation
    lv_playerDamageDealt = lib6F383DA1_gf_getPlayerDamageDealt(lp_playerSlot);
    if ((lp_mvpUnitIndex > -1) && (lv_playerDamageDealt > 0.0)) {
        lv_unitType = lib6F383DA1_gv_battleReport.lv_playerBattleStats[lp_playerSlot].lv_mvpUnitList.lv_unitTypes[lp_mvpUnitIndex];
        if ((lv_unitType != "")) {
            lv_mvpUnitDamage = lib6F383DA1_gf_getMVPUnitDamage(lp_playerSlot, lp_mvpUnitIndex);
            lv_percentDamage = ((lv_mvpUnitDamage / lv_playerDamageDealt) * 100.0);
            lv_percentStr = (FixedToString(lv_mvpUnitDamage, c_fixedPrecisionAny) + " (" + FixedToString(lv_percentDamage, 1) + "%)");
            lv_img = (CatalogFieldValueGet(c_gameCatalogButton, lv_unitType, "Icon", c_playerAny));
            lib6F383DA1_gf_updateMVPUnitTypeStatsDisplay(lp_playerSlot, lv_img, StringToText(lv_percentStr), StringExternal(CatalogFieldValueGet(c_gameCatalogUnit, lv_unitType, "Name", c_playerAny)));
        }

    }

}

void lib6F383DA1_gf_updateMVPUnitTypeBarGraph (int lp_playerSlot, fixed lp_newBarWidth) {
    // Automatic Variable Declarations
    // Implementation
    if (lib6F383DA1_gf_isOKToClearReport()) {
        if ((lp_newBarWidth > 0.0)) {
            DialogControlSetVisible(lib6F383DA1_gv_battleReport.lv_UI.lv_healthbarMVPUnitDmg[lp_playerSlot], PlayerGroupAll(), true);
        }
        else {
            DialogControlSetVisible(lib6F383DA1_gv_battleReport.lv_UI.lv_healthbarMVPUnitDmg[lp_playerSlot], PlayerGroupAll(), false);
        }
        DialogControlSetSize(lib6F383DA1_gv_battleReport.lv_UI.lv_healthbarMVPUnitDmg[lp_playerSlot], PlayerGroupAll(), CeilingI(lp_newBarWidth), 26);
    }

}

void lib6F383DA1_gf_updateMVPUnitTypeBarGraphs () {
    // Variable Declarations
    fixed lv_barWidth;
    int lv_mvpUnitIndex;
    fixed lv_mvpUnitDamage;
    fixed lv_playerDamageDealt;
    fixed lv_newBarWidth;
    int lv_i;

    // Automatic Variable Declarations
    const int autoE89E626C_ae = 1;
    const int autoE89E626C_ai = 1;

    // Variable Initialization
    lv_barWidth = lib6F383DA1_gv_BAR_GRAPH_WIDTH;

    // Implementation
    lv_i = 0;
    for ( ; ( (autoE89E626C_ai >= 0 && lv_i <= autoE89E626C_ae) || (autoE89E626C_ai < 0 && lv_i >= autoE89E626C_ae) ) ; lv_i += autoE89E626C_ai ) {
        lv_mvpUnitIndex = lib6F383DA1_gf_getMVPUnitTypeSlotIndex(lv_i);
        if ((lv_mvpUnitIndex > -1)) {
            lv_mvpUnitDamage = lib6F383DA1_gf_getMVPUnitDamage(lv_i, lv_mvpUnitIndex);
            lv_playerDamageDealt = lib6F383DA1_gf_getPlayerDamageDealt(lv_i);
            lv_barWidth = DialogControlGetWidth(lib6F383DA1_gv_battleReport.lv_UI.lv_healthbarCurrent[lv_i], (lv_i + 1));
            lv_newBarWidth = ((lv_mvpUnitDamage / lv_playerDamageDealt) * lv_barWidth);
            lib6F383DA1_gf_updateMVPUnitTypeBarGraph(lv_i, lv_newBarWidth);
        }

    }
}

void lib6F383DA1_gf_updateMVPUnitTypeStatsDisplay (int lp_playerSlot, string lp_image, text lp_percentStr, text lp_name) {
    // Automatic Variable Declarations
    // Implementation
    if (lib6F383DA1_gf_isOKToClearReport()) {
        libNtve_gf_SetDialogItemImage(lib6F383DA1_gv_battleReport.lv_UI.lv_mVPUnitTypeIcon[lp_playerSlot], lp_image, PlayerGroupAll());
        libNtve_gf_SetDialogItemImage2(lib6F383DA1_gv_battleReport.lv_UI.lv_mVPUnitTypeButtons[lp_playerSlot], lp_image, PlayerGroupAll());
        libNtve_gf_SetDialogItemText(lib6F383DA1_gv_battleReport.lv_UI.lv_mVPUnitTypeDmg[lp_playerSlot], lp_percentStr, PlayerGroupAll());
        libNtve_gf_SetDialogItemTooltip(lib6F383DA1_gv_battleReport.lv_UI.lv_mVPUnitTypeButtons[lp_playerSlot], lp_name, PlayerGroupAll());
    }

}

int lib6F383DA1_gf_getMVPUnitTypeSlotIndex (int lp_playerSlot) {
    // Variable Declarations
    fixed lv_maxDamage;
    int lv_maxDamageIndex;

    // Automatic Variable Declarations
    int auto985CBB35_ae;
    int auto985CBB35_var;

    // Variable Initialization
    lv_maxDamageIndex = -1;

    // Implementation
    auto985CBB35_ae = lib6F383DA1_gv_battleReport.lv_playerBattleStats[lp_playerSlot].lv_mvpUnitList.lv_unitTypeCount;
    auto985CBB35_var = 0;
    for ( ; auto985CBB35_var <= auto985CBB35_ae; auto985CBB35_var += 1 ) {
        if ((lib6F383DA1_gv_battleReport.lv_playerBattleStats[lp_playerSlot].lv_mvpUnitList.lv_unitTypeDamage[auto985CBB35_var] > lv_maxDamage)) {
            lv_maxDamageIndex = auto985CBB35_var;
            lv_maxDamage = lib6F383DA1_gv_battleReport.lv_playerBattleStats[lp_playerSlot].lv_mvpUnitList.lv_unitTypeDamage[auto985CBB35_var];
        }

    }
    return lv_maxDamageIndex;
}

int lib6F383DA1_gf_getMVPUnitSlot (int lp_pID, string lp_unitType) {
    // Variable Declarations
    int lv_i;

    // Automatic Variable Declarations
    const int autoC02F7CF2_ae = 31;
    const int autoC02F7CF2_ai = 1;

    // Variable Initialization

    // Implementation
    lv_i = 0;
    for ( ; ( (autoC02F7CF2_ai >= 0 && lv_i <= autoC02F7CF2_ae) || (autoC02F7CF2_ai < 0 && lv_i >= autoC02F7CF2_ae) ) ; lv_i += autoC02F7CF2_ai ) {
        if ((lp_unitType == lib6F383DA1_gv_battleReport.lv_playerBattleStats[lp_pID].lv_mvpUnitList.lv_unitTypes[lv_i])) {
            return lv_i;
        }

    }
    return -1;
}

int lib6F383DA1_gf_getNextOpenMVPSlot (int lp_pID) {
    // Variable Declarations
    int lv_i;

    // Automatic Variable Declarations
    const int autoB368A8A2_ae = 31;
    const int autoB368A8A2_ai = 1;

    // Variable Initialization

    // Implementation
    lv_i = 0;
    for ( ; ( (autoB368A8A2_ai >= 0 && lv_i <= autoB368A8A2_ae) || (autoB368A8A2_ai < 0 && lv_i >= autoB368A8A2_ae) ) ; lv_i += autoB368A8A2_ai ) {
        if ((lib6F383DA1_gv_battleReport.lv_playerBattleStats[lp_pID].lv_mvpUnitList.lv_unitTypeDamage[lv_i] > 0)) {
            continue;
        }
        else {
            return lv_i;
        }
    }
    return 0;
}

fixed lib6F383DA1_gf_getMVPUnitDamage (int lp_playerSlot, int lp_mvpUnitIndex) {
    // Automatic Variable Declarations
    // Implementation
    return lib6F383DA1_gv_battleReport.lv_playerBattleStats[lp_playerSlot].lv_mvpUnitList.lv_unitTypeDamage[lp_mvpUnitIndex];
}

fixed lib6F383DA1_gf_getPlayerDamageDealt (int lp_playerSlot) {
    // Automatic Variable Declarations
    // Implementation
    return lib6F383DA1_gv_battleReport.lv_playerBattleStats[lp_playerSlot].lv_damageDealt;
}

fixed lib6F383DA1_gf_getTotalDamageDealt () {
    // Automatic Variable Declarations
    // Implementation
    return (lib6F383DA1_gv_battleReport.lv_playerBattleStats[0].lv_damageDealt + lib6F383DA1_gv_battleReport.lv_playerBattleStats[1].lv_damageDealt);
}

void lib6F383DA1_gf_updateResourcesLostDisplay (int lp_playerSlot) {
    // Automatic Variable Declarations
    // Implementation
    if (lib6F383DA1_gf_isOKToClearReport()) {
        libNtve_gf_SetDialogItemText(lib6F383DA1_gv_battleReport.lv_UI.lv_totalUnitsLost[lp_playerSlot], FixedToText(lib6F383DA1_gv_battleReport.lv_playerBattleStats[lp_playerSlot].lv_totalUnitsLost, 0), PlayerGroupAll());
        libNtve_gf_SetDialogItemText(lib6F383DA1_gv_battleReport.lv_UI.lv_mineralsLost[lp_playerSlot], IntToText(lib6F383DA1_gv_battleReport.lv_playerBattleStats[lp_playerSlot].lv_mineralsLost), PlayerGroupAll());
        libNtve_gf_SetDialogItemText(lib6F383DA1_gv_battleReport.lv_UI.lv_gasLost[lp_playerSlot], IntToText(lib6F383DA1_gv_battleReport.lv_playerBattleStats[lp_playerSlot].lv_gasLost), PlayerGroupAll());
        libNtve_gf_SetDialogItemText(lib6F383DA1_gv_battleReport.lv_UI.lv_suppliesLost[lp_playerSlot], FixedToText(lib6F383DA1_gv_battleReport.lv_playerBattleStats[lp_playerSlot].lv_suppliesLost, c_fixedPrecisionAny), PlayerGroupAll());
    }

}

void lib6F383DA1_gf_updateResourcesLostGraphs (int lp_playerSlot, fixed lp_totalResourcesLost, int lp_maxBarWidth) {
    // Variable Declarations
    fixed lv_mineralsPercentWidth;
    fixed lv_newMineralsPercentWidth;
    fixed lv_gasPercentWidth;
    fixed lv_newGasPercentWidth;
    fixed lv_totalMineralsLost;
    fixed lv_totalGasLost;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    lv_totalMineralsLost = (lib6F383DA1_gv_battleReport.lv_playerBattleStats[0].lv_mineralsLost + lib6F383DA1_gv_battleReport.lv_playerBattleStats[1].lv_mineralsLost);
    lv_totalGasLost = (lib6F383DA1_gv_battleReport.lv_playerBattleStats[0].lv_gasLost + lib6F383DA1_gv_battleReport.lv_playerBattleStats[1].lv_gasLost);
    if (lib6F383DA1_gf_isOKToClearReport() && (lv_totalMineralsLost > 0.0)) {
        lv_mineralsPercentWidth = (lib6F383DA1_gv_battleReport.lv_playerBattleStats[lp_playerSlot].lv_mineralsLost / lv_totalMineralsLost);
        lv_newMineralsPercentWidth = (lv_mineralsPercentWidth * lp_maxBarWidth);
        if ((lv_mineralsPercentWidth > 0.0)) {
            DialogControlSetVisible(lib6F383DA1_gv_battleReport.lv_UI.lv_mineralsLostBar[lp_playerSlot], PlayerGroupAll(), true);
        }

        DialogControlSetSize(lib6F383DA1_gv_battleReport.lv_UI.lv_mineralsLostBar[lp_playerSlot], PlayerGroupAll(), CeilingI(lv_newMineralsPercentWidth), 30);
    }

    if (lib6F383DA1_gf_isOKToClearReport() && (lv_totalGasLost > 0.0)) {
        lv_gasPercentWidth = (lib6F383DA1_gv_battleReport.lv_playerBattleStats[lp_playerSlot].lv_gasLost / lv_totalGasLost);
        lv_newGasPercentWidth = (lv_gasPercentWidth * lp_maxBarWidth);
        if ((lv_gasPercentWidth > 0.0)) {
            DialogControlSetVisible(lib6F383DA1_gv_battleReport.lv_UI.lv_gasLostBar[lp_playerSlot], PlayerGroupAll(), true);
        }

        DialogControlSetSize(lib6F383DA1_gv_battleReport.lv_UI.lv_gasLostBar[lp_playerSlot], PlayerGroupAll(), CeilingI(lv_newGasPercentWidth), 30);
    }

}

void lib6F383DA1_gf_addUnitKilled (int lp_pID, string lp_unitType) {
    // Variable Declarations
    int lv_saveToSlot;
    int lv_openSlot;
    string lv_img;
    string lv_tooltip;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_tooltip = "";

    // Implementation
    lv_saveToSlot = lib6F383DA1_gf_getKilledUnitSlot(lp_pID, lp_unitType);
    lv_openSlot = lib6F383DA1_gf_getNextOpenUnitSlot(lp_pID);
    if ((lv_saveToSlot > -1)) {
        lib6F383DA1_gv_battleReport.lv_playerBattleStats[lp_pID].lv_lostUnitTypes[lv_saveToSlot] = lp_unitType;
        lib6F383DA1_gv_battleReport.lv_playerBattleStats[lp_pID].lv_lostUnitTypeCounts[lv_saveToSlot] += 1;
        lib6F383DA1_gf_updateUnitsLostButtons(lp_pID, lp_unitType, lv_saveToSlot);
    }
    else {
        if ((lib6F383DA1_gv_battleReport.lv_playerBattleStats[lp_pID].lv_lostUnitTypeCount < 12)) {
            lv_saveToSlot = lv_openSlot;
            lib6F383DA1_gv_battleReport.lv_playerBattleStats[lp_pID].lv_lostUnitTypes[lv_saveToSlot] = lp_unitType;
            lib6F383DA1_gv_battleReport.lv_playerBattleStats[lp_pID].lv_lostUnitTypeCounts[lv_saveToSlot] += 1;
            lib6F383DA1_gv_battleReport.lv_playerBattleStats[lp_pID].lv_lostUnitTypeCount += 1;
            lib6F383DA1_gf_updateUnitsLostButtons(lp_pID, lp_unitType, lv_saveToSlot);
        }

    }
}

void lib6F383DA1_gf_updateUnitsLostButtons (int lp_pID, string lp_unitType, int lp_index) {
    // Variable Declarations
    string lv_img;
    string lv_tooltip;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_tooltip = "";

    // Implementation
    if (lib6F383DA1_gf_isOKToClearReport()) {
        lv_img = (CatalogFieldValueGet(c_gameCatalogButton, lp_unitType, "Icon", c_playerAny));
        lv_tooltip = CatalogFieldValueGet(c_gameCatalogUnit, lp_unitType, "Name", c_playerAny);
        libNtve_gf_SetDialogItemText(lib6F383DA1_gv_battleReport.lv_UI.lv_killedUnitCounts[lp_pID][lp_index], IntToText(lib6F383DA1_gv_battleReport.lv_playerBattleStats[lp_pID].lv_lostUnitTypeCounts[lp_index]), PlayerGroupAll());
        libNtve_gf_SetDialogItemImage(lib6F383DA1_gv_battleReport.lv_UI.lv_killledUnitTypes[lp_pID][lp_index], lv_img, PlayerGroupAll());
        DialogControlSetVisible(lib6F383DA1_gv_battleReport.lv_UI.lv_killedUnitCountBG[lp_pID][lp_index], PlayerGroupAll(), true);
        libNtve_gf_SetDialogItemImage2(lib6F383DA1_gv_battleReport.lv_UI.lv_killedUnitButtons[lp_pID][lp_index], lv_img, PlayerGroupAll());
        libNtve_gf_SetDialogItemTooltip(lib6F383DA1_gv_battleReport.lv_UI.lv_killedUnitButtons[lp_pID][lp_index], StringExternal(lv_tooltip), PlayerGroupAll());
    }

}

void lib6F383DA1_gf_refreshUnitsLostButtons (int lp_playerSlot) {
    // Variable Declarations
    int lv_unitLostIndex;
    int lv_unitLostTypeCount;
    string lv_unitType;
    int lv_unitTypeKilledCount;
    string lv_img;
    string lv_tooltip;

    // Automatic Variable Declarations
    int auto344B841F_ae;
    const int auto344B841F_ai = 1;

    // Variable Initialization
    lv_unitLostTypeCount = lib6F383DA1_gv_battleReport.lv_playerBattleStats[lp_playerSlot].lv_lostUnitTypeCount;
    lv_tooltip = "";

    // Implementation
    auto344B841F_ae = (lv_unitLostTypeCount - 1);
    lv_unitLostIndex = 0;
    for ( ; ( (auto344B841F_ai >= 0 && lv_unitLostIndex <= auto344B841F_ae) || (auto344B841F_ai < 0 && lv_unitLostIndex >= auto344B841F_ae) ) ; lv_unitLostIndex += auto344B841F_ai ) {
        if ((lv_unitLostIndex > 9)) {
        }

        lv_unitType = lib6F383DA1_gv_battleReport.lv_playerBattleStats[lp_playerSlot].lv_lostUnitTypes[lv_unitLostIndex];
        lv_unitTypeKilledCount = lib6F383DA1_gv_battleReport.lv_playerBattleStats[lp_playerSlot].lv_lostUnitTypeCounts[lv_unitLostIndex];
        if ((lv_unitType != "") && (lv_unitTypeKilledCount > 0)) {
            lv_img = (CatalogFieldValueGet(c_gameCatalogButton, lv_unitType, "Icon", c_playerAny));
            lv_tooltip = CatalogFieldValueGet(c_gameCatalogUnit, lv_unitType, "Name", c_playerAny);
            libNtve_gf_SetDialogItemText(lib6F383DA1_gv_battleReport.lv_UI.lv_killedUnitCounts[lp_playerSlot][lv_unitLostIndex], IntToText(lib6F383DA1_gv_battleReport.lv_playerBattleStats[lp_playerSlot].lv_lostUnitTypeCounts[lv_unitLostIndex]), PlayerGroupAll());
            libNtve_gf_SetDialogItemImage(lib6F383DA1_gv_battleReport.lv_UI.lv_killledUnitTypes[lp_playerSlot][lv_unitLostIndex], lv_img, PlayerGroupAll());
            DialogControlSetVisible(lib6F383DA1_gv_battleReport.lv_UI.lv_killedUnitCountBG[lp_playerSlot][lv_unitLostIndex], PlayerGroupAll(), true);
            libNtve_gf_SetDialogItemImage2(lib6F383DA1_gv_battleReport.lv_UI.lv_killedUnitButtons[lp_playerSlot][lv_unitLostIndex], lv_img, PlayerGroupAll());
            libNtve_gf_SetDialogItemTooltip(lib6F383DA1_gv_battleReport.lv_UI.lv_killedUnitButtons[lp_playerSlot][lv_unitLostIndex], StringExternal(lv_tooltip), PlayerGroupAll());
        }

    }
}

string lib6F383DA1_gf_removeStringFromUnitType (string lp_unitType, string lp_string) {
    // Variable Declarations
    string lv_unitType;
    string lv_baseUnitType;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_unitType = (lp_unitType);
    lv_baseUnitType = "";

    // Implementation
    if ((StringLength(lv_unitType) > StringLength(lp_string))) {
        lv_baseUnitType = StringReplaceWord(lv_unitType, lp_string, "", c_stringReplaceAll, c_stringCase);
        return lv_baseUnitType;
    }

    return lv_unitType;
}

int lib6F383DA1_gf_getKilledUnitSlot (int lp_pID, string lp_unitType) {
    // Variable Declarations
    int lv_slotIndex;

    // Automatic Variable Declarations
    const int autoB4D49660_ae = 15;
    const int autoB4D49660_ai = 1;

    // Variable Initialization

    // Implementation
    lv_slotIndex = 0;
    for ( ; ( (autoB4D49660_ai >= 0 && lv_slotIndex <= autoB4D49660_ae) || (autoB4D49660_ai < 0 && lv_slotIndex >= autoB4D49660_ae) ) ; lv_slotIndex += autoB4D49660_ai ) {
        if ((lp_unitType == lib6F383DA1_gv_battleReport.lv_playerBattleStats[lp_pID].lv_lostUnitTypes[lv_slotIndex])) {
            return lv_slotIndex;
        }

    }
    return -1;
}

int lib6F383DA1_gf_getNextOpenUnitSlot (int lp_pID) {
    // Variable Declarations
    int lv_slotIndex;

    // Automatic Variable Declarations
    const int autoB75B6C8A_ae = 15;
    const int autoB75B6C8A_ai = 1;

    // Variable Initialization

    // Implementation
    lv_slotIndex = 0;
    for ( ; ( (autoB75B6C8A_ai >= 0 && lv_slotIndex <= autoB75B6C8A_ae) || (autoB75B6C8A_ai < 0 && lv_slotIndex >= autoB75B6C8A_ae) ) ; lv_slotIndex += autoB75B6C8A_ai ) {
        if ((lib6F383DA1_gv_battleReport.lv_playerBattleStats[lp_pID].lv_lostUnitTypeCounts[lv_slotIndex] > 0)) {
            continue;
        }
        else {
            return lv_slotIndex;
        }
    }
    return 0;
}

fixed lib6F383DA1_gf_getTotalResourcesLost () {
    // Automatic Variable Declarations
    // Implementation
    return (lib6F383DA1_gv_battleReport.lv_playerBattleStats[0].lv_mineralsLost + lib6F383DA1_gv_battleReport.lv_playerBattleStats[1].lv_mineralsLost + lib6F383DA1_gv_battleReport.lv_playerBattleStats[0].lv_gasLost + lib6F383DA1_gv_battleReport.lv_playerBattleStats[1].lv_gasLost);
}

bool lib6F383DA1_gf_hasAbilityDealingDamage (string lp_unitType) {
    // Automatic Variable Declarations
    // Implementation
    if (((lp_unitType == "Infestor") || (lp_unitType == "InfestorBurrowed") || (lp_unitType == "Disruptor") || (lp_unitType == "Corruptor") || (lp_unitType == "Ravager") || (lp_unitType == "HighTemplar") || (lp_unitType == "Ghost") || (lp_unitType == "Viper") || (lp_unitType == "Reaper") || (lp_unitType == "HighTemplarSCBW") || (lp_unitType == "GhostSCBW") || (lp_unitType == "ScienceVesselSCBW") || (lp_unitType == "VultureSCBW") || (lp_unitType == "QueenSCBW") || (lp_unitType == "DefilerSCBW") || (lp_unitType == "DefilerSCBW@Burrowed"))) {
        return true;
    }
    else {
        return false;
    }
}

bool lib6F383DA1_gf_isCocoon (string lp_unitType) {
    // Automatic Variable Declarations
    // Implementation
    return StringContains((lp_unitType), "Cocoon", c_stringAnywhere, c_stringCase);
}

bool lib6F383DA1_gf_isStructure (string lp_unitType) {
    // Automatic Variable Declarations
    // Implementation
    return UnitTypeTestAttribute(UnitGetType(EventUnit()), c_unitAttributeStructure);
}

bool lib6F383DA1_gf_isChangeling (string lp_unitType) {
    // Automatic Variable Declarations
    // Implementation
    return StringContains((lp_unitType), "Changeling", c_stringAnywhere, c_stringCase);
}

bool lib6F383DA1_gf_lostUnitSlotIsFilled (int lp_pID, int lp_slotIndex) {
    // Automatic Variable Declarations
    // Implementation
    if ((lib6F383DA1_gv_battleReport.lv_playerBattleStats[lp_pID].lv_lostUnitTypeCounts[lp_slotIndex] > 0) && (lib6F383DA1_gv_battleReport.lv_playerBattleStats[lp_pID].lv_lostUnitTypes[lp_slotIndex] != null)) {
        return true;
    }
    else {
        return false;
    }
}

bool lib6F383DA1_gf_killedUnitTypeExistsInSlot (int lp_pID, int lp_slotIndex, string lp_unitType) {
    // Automatic Variable Declarations
    // Implementation
    if ((lib6F383DA1_gv_battleReport.lv_playerBattleStats[lp_pID].lv_lostUnitTypes[lp_slotIndex] == lp_unitType)) {
        return true;
    }
    else {
        return false;
    }
}

bool lib6F383DA1_gf_unitIsAllowed (unit lp_unit) {
    // Automatic Variable Declarations
    // Implementation
    if ((UnitTypeTestFlag(UnitGetType(lp_unit), c_unitFlagMissile) == false) && (UnitTypeTestFlag(UnitGetType(lp_unit), c_unitFlagNoDraw) == false) && (UnitTypeTestFlag(UnitGetType(lp_unit), c_unitFlagInvulnerable) == false) && (UnitTypeTestFlag(UnitGetType(lp_unit), c_unitFlagDestructible) == false) && (UnitHasBehavior2(lp_unit, "Hallucination") == false) && (lib6F383DA1_gf_isChangeling(UnitGetType(lp_unit)) == false) && (UnitGetType(lp_unit) != "Egg") && (UnitGetType(lp_unit) != "LocustMPPrecursor") && (UnitGetType(lp_unit) != "BroodlingEscort") && (UnitGetType(lp_unit) != "Broodling") && (UnitGetType(lp_unit) != "Larva") && (UnitGetType(lp_unit) != "MULE") && (UnitGetType(lp_unit) != "BroodlingSCBW") && (UnitGetType(lp_unit) != "LarvaSCBW") && (UnitHasBehavior2(lp_unit, "HighTemplarSCBWHallucination") == false) && ((UnitGetOwner(lp_unit) == 1) || (UnitGetOwner(lp_unit) == 2))) {
        return true;
    }
    else {
        return false;
    }
}

void lib6F383DA1_gf_updateDamageDisplay (int lp_playerSlot, fixed lp_maxBarWidth) {
    // Variable Declarations
    fixed lv_totalDamage;
    fixed lv_newBarWidth;
    fixed lv_percentage;
    string lv_damageString;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_damageString = "";

    // Implementation
    if (lib6F383DA1_gf_isOKToClearReport()) {
        lv_totalDamage = lib6F383DA1_gf_getTotalDamageDealt();
        if ((lv_totalDamage > 0.0)) {
            lv_percentage = ((lib6F383DA1_gv_battleReport.lv_playerBattleStats[lp_playerSlot].lv_damageDealt / lv_totalDamage) * 100.0);
            lv_newBarWidth = ((lib6F383DA1_gv_battleReport.lv_playerBattleStats[lp_playerSlot].lv_damageDealt / lv_totalDamage) * lp_maxBarWidth);
            lv_damageString = FixedToString(lib6F383DA1_gv_battleReport.lv_playerBattleStats[lp_playerSlot].lv_damageDealt, c_fixedPrecisionAny);
            lv_damageString = (lv_damageString + " (" + FixedToString(lv_percentage, 1) + "%)");
            if ((lv_percentage > 0.0)) {
                DialogControlSetVisible(lib6F383DA1_gv_battleReport.lv_UI.lv_healthbarCurrent[lp_playerSlot], PlayerGroupAll(), true);
            }

            DialogControlSetSize(lib6F383DA1_gv_battleReport.lv_UI.lv_healthbarCurrent[lp_playerSlot], PlayerGroupAll(), CeilingI(lv_newBarWidth), 30);
            libNtve_gf_SetDialogItemText(lib6F383DA1_gv_battleReport.lv_UI.lv_damageDealt[lp_playerSlot], StringToText(lv_damageString), PlayerGroupAll());
        }

    }

}

void lib6F383DA1_gf_catchDamageDealingAbility (int lp_playerSlot, string lp_unitType, string lp_damageEffect) {
    // Variable Declarations
    string lv_ability;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    if (lib6F383DA1_gf_abilitiesUsedIsEmpty(lp_playerSlot) && lib6F383DA1_gf_hasAbilityDealingDamage(lp_unitType)) {
        lv_ability = lib6F383DA1_gf_convertDamageEffectToAbility(lp_damageEffect);
        if ((lv_ability != "")) {
            lib6F383DA1_gf_addAbilityUsed(lp_playerSlot, lv_ability, "", "");
        }

    }

}

void lib6F383DA1_gf_addAbilityUsed (int lp_playerSlot, string lp_abil, string lp_customImage, string lp_customTooltip) {
    // Variable Declarations
    int lv_saveToSlot;
    string lv_img;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    lv_saveToSlot = lib6F383DA1_gf_getAbilityUsedSlot(lp_playerSlot, lp_abil);
    if ((lv_saveToSlot > -1)) {
        lib6F383DA1_gv_battleReport.lv_playerBattleStats[lp_playerSlot].lv_abilitiesUsed[lv_saveToSlot] = lp_abil;
        lib6F383DA1_gv_battleReport.lv_playerBattleStats[lp_playerSlot].lv_abilitiesUsedCounts[lv_saveToSlot] += 1;
        lib6F383DA1_gf_updateAbilityUsedButtons(lp_playerSlot, lv_saveToSlot, lp_abil, lp_customImage, lp_customTooltip);
    }
    else {
        if ((lib6F383DA1_gv_battleReport.lv_playerBattleStats[lp_playerSlot].lv_abilitiesUsedCount < 10)) {
            lv_saveToSlot = lib6F383DA1_gf_getNextOpenAbilitySlot(lp_playerSlot);
            lib6F383DA1_gv_battleReport.lv_playerBattleStats[lp_playerSlot].lv_abilitiesUsed[lv_saveToSlot] = lp_abil;
            lib6F383DA1_gv_battleReport.lv_playerBattleStats[lp_playerSlot].lv_abilitiesUsedCounts[lv_saveToSlot] += 1;
            lib6F383DA1_gv_battleReport.lv_playerBattleStats[lp_playerSlot].lv_abilitiesUsedCustomImages[lv_saveToSlot] = lp_customImage;
            lib6F383DA1_gv_battleReport.lv_playerBattleStats[lp_playerSlot].lv_abilitiesUsedCustomTooltips[lv_saveToSlot] = lp_customTooltip;
            lib6F383DA1_gv_battleReport.lv_playerBattleStats[lp_playerSlot].lv_abilitiesUsedCount += 1;
            lib6F383DA1_gf_updateAbilityUsedButtons(lp_playerSlot, lv_saveToSlot, lp_abil, lp_customImage, lp_customTooltip);
        }

    }
}

void lib6F383DA1_gf_updateAbilityUsedButtons (int lp_playerSlot, int lp_index, string lp_abil, string lp_customImage, string lp_customTooltip) {
    // Variable Declarations
    string lv_img;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    if (lib6F383DA1_gf_isOKToClearReport()) {
        libNtve_gf_SetDialogItemText(lib6F383DA1_gv_battleReport.lv_UI.lv_abilityTypeCounts[lp_playerSlot][lp_index], IntToText(lib6F383DA1_gv_battleReport.lv_playerBattleStats[lp_playerSlot].lv_abilitiesUsedCounts[lp_index]), PlayerGroupAll());
        DialogControlSetVisible(lib6F383DA1_gv_battleReport.lv_UI.lv_abilityCountBG[lp_playerSlot][lp_index], PlayerGroupAll(), true);
        if ((lp_customImage != "") && (lp_customTooltip != "")) {
            libNtve_gf_SetDialogItemImage(lib6F383DA1_gv_battleReport.lv_UI.lv_abilityTypes[lp_playerSlot][lp_index], lp_customImage, PlayerGroupAll());
            libNtve_gf_SetDialogItemImage2(lib6F383DA1_gv_battleReport.lv_UI.lv_abilityButtons[lp_playerSlot][lp_index], lp_customImage, PlayerGroupAll());
            libNtve_gf_SetDialogItemTooltip(lib6F383DA1_gv_battleReport.lv_UI.lv_abilityButtons[lp_playerSlot][lp_index], StringToText(lp_customTooltip), PlayerGroupAll());
        }
        else {
            lv_img = (CatalogFieldValueGet(c_gameCatalogButton, lp_abil, "Icon", c_playerAny));
            libNtve_gf_SetDialogItemImage(lib6F383DA1_gv_battleReport.lv_UI.lv_abilityTypes[lp_playerSlot][lp_index], lv_img, PlayerGroupAll());
            libNtve_gf_SetDialogItemImage2(lib6F383DA1_gv_battleReport.lv_UI.lv_abilityButtons[lp_playerSlot][lp_index], lv_img, PlayerGroupAll());
            libNtve_gf_SetDialogItemTooltip(lib6F383DA1_gv_battleReport.lv_UI.lv_abilityButtons[lp_playerSlot][lp_index], StringExternal(CatalogFieldValueGet(c_gameCatalogAbil, lp_abil, "Name", c_playerAny)), PlayerGroupAll());
        }
    }

}

void lib6F383DA1_gf_refreshAbilityUsedButtons (int lp_playerSlot) {
    // Variable Declarations
    int lv_abilIndex;
    int lv_abilCountTotal;
    string lv_abil;
    int lv_abilUsedCount;
    string lv_customImage;
    string lv_customTooltip;
    string lv_img;

    // Automatic Variable Declarations
    int autoF9053407_ae;
    const int autoF9053407_ai = 1;

    // Variable Initialization
    lv_abilCountTotal = lib6F383DA1_gv_battleReport.lv_playerBattleStats[lp_playerSlot].lv_abilitiesUsedCount;
    lv_customTooltip = "";

    // Implementation
    autoF9053407_ae = (lv_abilCountTotal - 1);
    lv_abilIndex = 0;
    for ( ; ( (autoF9053407_ai >= 0 && lv_abilIndex <= autoF9053407_ae) || (autoF9053407_ai < 0 && lv_abilIndex >= autoF9053407_ae) ) ; lv_abilIndex += autoF9053407_ai ) {
        if ((lv_abilIndex > 9)) {
            break;
        }

        lv_abil = lib6F383DA1_gv_battleReport.lv_playerBattleStats[lp_playerSlot].lv_abilitiesUsed[lv_abilIndex];
        lv_abilUsedCount = lib6F383DA1_gv_battleReport.lv_playerBattleStats[lp_playerSlot].lv_abilitiesUsedCounts[lv_abilIndex];
        if ((lv_abil != "") && (lv_abilUsedCount > 0)) {
            libNtve_gf_SetDialogItemText(lib6F383DA1_gv_battleReport.lv_UI.lv_abilityTypeCounts[lp_playerSlot][lv_abilIndex], IntToText(lv_abilUsedCount), PlayerGroupAll());
            DialogControlSetVisible(lib6F383DA1_gv_battleReport.lv_UI.lv_abilityCountBG[lp_playerSlot][lv_abilIndex], PlayerGroupAll(), true);
            lv_customImage = lib6F383DA1_gv_battleReport.lv_playerBattleStats[lp_playerSlot].lv_abilitiesUsedCustomImages[lv_abilIndex];
            lv_customTooltip = lib6F383DA1_gv_battleReport.lv_playerBattleStats[lp_playerSlot].lv_abilitiesUsedCustomTooltips[lv_abilIndex];
            if ((lv_customImage != "") && (lv_customTooltip != "")) {
                libNtve_gf_SetDialogItemImage(lib6F383DA1_gv_battleReport.lv_UI.lv_abilityTypes[lp_playerSlot][lv_abilIndex], lv_customImage, PlayerGroupAll());
                libNtve_gf_SetDialogItemImage2(lib6F383DA1_gv_battleReport.lv_UI.lv_abilityButtons[lp_playerSlot][lv_abilIndex], lv_customImage, PlayerGroupAll());
                libNtve_gf_SetDialogItemTooltip(lib6F383DA1_gv_battleReport.lv_UI.lv_abilityButtons[lp_playerSlot][lv_abilIndex], StringToText(lv_customTooltip), PlayerGroupAll());
            }
            else {
                lv_img = (CatalogFieldValueGet(c_gameCatalogButton, lv_abil, "Icon", c_playerAny));
                libNtve_gf_SetDialogItemImage(lib6F383DA1_gv_battleReport.lv_UI.lv_abilityTypes[lp_playerSlot][lv_abilIndex], lv_img, PlayerGroupAll());
                libNtve_gf_SetDialogItemImage2(lib6F383DA1_gv_battleReport.lv_UI.lv_abilityButtons[lp_playerSlot][lv_abilIndex], lv_img, PlayerGroupAll());
                libNtve_gf_SetDialogItemTooltip(lib6F383DA1_gv_battleReport.lv_UI.lv_abilityButtons[lp_playerSlot][lv_abilIndex], StringExternal(CatalogFieldValueGet(c_gameCatalogAbil, lv_abil, "Name", c_playerAny)), PlayerGroupAll());
            }
        }

    }
}

int lib6F383DA1_gf_getAbilityUsedSlot (int lp_pID, string lp_abil) {
    // Variable Declarations
    int lv_i;

    // Automatic Variable Declarations
    const int autoF1D4F0D9_ae = 9;
    const int autoF1D4F0D9_ai = 1;

    // Variable Initialization

    // Implementation
    lv_i = 0;
    for ( ; ( (autoF1D4F0D9_ai >= 0 && lv_i <= autoF1D4F0D9_ae) || (autoF1D4F0D9_ai < 0 && lv_i >= autoF1D4F0D9_ae) ) ; lv_i += autoF1D4F0D9_ai ) {
        if ((lp_abil == lib6F383DA1_gv_battleReport.lv_playerBattleStats[lp_pID].lv_abilitiesUsed[lv_i])) {
            return lv_i;
        }

    }
    return -1;
}

int lib6F383DA1_gf_getNextOpenAbilitySlot (int lp_pID) {
    // Variable Declarations
    int lv_i;

    // Automatic Variable Declarations
    const int auto422CE9B1_ae = 9;
    const int auto422CE9B1_ai = 1;

    // Variable Initialization

    // Implementation
    lv_i = 0;
    for ( ; ( (auto422CE9B1_ai >= 0 && lv_i <= auto422CE9B1_ae) || (auto422CE9B1_ai < 0 && lv_i >= auto422CE9B1_ae) ) ; lv_i += auto422CE9B1_ai ) {
        if ((lib6F383DA1_gv_battleReport.lv_playerBattleStats[lp_pID].lv_abilitiesUsedCounts[lv_i] > 0)) {
            continue;
        }
        else {
            return lv_i;
        }
    }
    return 0;
}

string lib6F383DA1_gf_convertDamageEffectToAbility (string lp_dmgEffect) {
    // Automatic Variable Declarations
    string auto16FADD75_val;

    // Implementation
    auto16FADD75_val = lp_dmgEffect;
    if (auto16FADD75_val == "PurificationNovaDamage") {
        return "PurificationNovaTargeted";
    }
    else if (auto16FADD75_val == "FungalGrowthDamage") {
        return "FungalGrowth";
    }
    else if (auto16FADD75_val == "CausticLevel1Damage") {
        return "CausticSpray";
    }
    else if (auto16FADD75_val == "RavagerCorrosiveBileDamage") {
        return "RavagerCorrosiveBile";
    }
    else if (auto16FADD75_val == "PsiStormDamage") {
        return "PsiStorm";
    }
    else if (auto16FADD75_val == "Feedback") {
        return "Feedback";
    }
    else if (auto16FADD75_val == "NukeDamage") {
        return "TacNukeStrike";
    }
    else if (auto16FADD75_val == "EMPDamage") {
        return "EMP";
    }
    else if (auto16FADD75_val == "SnipeDamage") {
        return "ChannelSnipe";
    }
    else if (auto16FADD75_val == "ParasiticBombDotDamage") {
        return "ParasiticBomb";
    }
    else if (auto16FADD75_val == "KD8ChargeExplodeDamage") {
        return "KD8Charge";
    }
    else if (auto16FADD75_val == "DarkArchonSCBWFeedback@Damage") {
        return "DarkArchonSCBWFeedback";
    }
    else if (auto16FADD75_val == "DefilerSCBWPlague@Damage") {
        return "DefilerSCBWPlague";
    }
    else if (auto16FADD75_val == "NukeDamage") {
        return "GhostSCBWNuclearStrike";
    }
    else if (auto16FADD75_val == "ScienceVesselSCBWEMPShockwave@Damage") {
        return "ScienceVesselSCBWEMPShockwave";
    }
    else if (auto16FADD75_val == "ScienceVesselSCBWIrradiate@DamageInitial") {
        return "ScienceVesselSCBWEMPShockwave";
    }
    else if (auto16FADD75_val == "ScienceVesselSCBWIrradiate@DamagePeriodic") {
        return "ScienceVesselSCBWIrradiate";
    }
    else if (auto16FADD75_val == "HighTemplarSCBWPsiStorm@Damage") {
        return "HighTemplarSCBWPsiStorm";
    }
    else if (auto16FADD75_val == "HighTemplarSCBWPsiStorm@DamageInitial") {
        return "HighTemplarSCBWPsiStorm";
    }
    else {
    }
    return "";
}

bool lib6F383DA1_gf_isAbilHallucination (string lp_abil) {
    // Automatic Variable Declarations
    // Implementation
    if (((lp_abil == "HallucinationAdept") || (lp_abil == "HallucinationArchon") || (lp_abil == "HallucinationColossus") || (lp_abil == "HallucinationDisruptor") || (lp_abil == "HallucinationHighTemplar") || (lp_abil == "HallucinationImmortal") || (lp_abil == "HallucinationPhoenix") || (lp_abil == "HallucinationProbe") || (lp_abil == "HallucinationStalker") || (lp_abil == "HallucinationVoidRay") || (lp_abil == "HallucinationWarpPrism") || (lp_abil == "HallucinationZealot") || (lp_abil == "HighTemplarSCBWHallucination"))) {
        return true;
    }
    else {
        return false;
    }
}

bool lib6F383DA1_gf_abilityIsAllowed (string lp_abi) {
    // Automatic Variable Declarations
    // Implementation
    if (((lp_abi == "AdeptPhaseShift") || (lp_abi == "BlindingCloud") || (lp_abi == "Yamato") || (lp_abi == "CausticSpray") || (lp_abi == "DarkTemplarBlink") || (lp_abi == "PurificationNovaTargeted") || (lp_abi == "MedivacSpeedBoost") || (lp_abi == "ChannelSnipe") || (lp_abi == "EMP") || (lp_abi == "TacNukeStrike") || (lp_abi == "Feedback") || (lp_abi == "PsiStorm") || (lp_abi == "FungalGrowth") || (lp_abi == "NeuralParasite") || (lp_abi == "AmorphousArmorcloud") || (lp_abi == "MassRecall") || (lp_abi == "BatteryOvercharge") || (lp_abi == "NexusMassRecall") || (lp_abi == "OracleStasisTrapBuild") || (lp_abi == "OracleRevelation") || (lp_abi == "Contaminate") || (lp_abi == "GravitonBeam") || (lp_abi == "Transfusion") || (lp_abi == "RavagerCorrosiveBile") || (lp_abi == "BuildAutoTurret") || (lp_abi == "RavenShredderMissile") || (lp_abi == "RavenScramblerMissile") || (lp_abi == "KD8Charge") || (lp_abi == "ForceField") || (lp_abi == "GuardianShield") || lib6F383DA1_gf_isAbilHallucination(lp_abi) || (lp_abi == "Blink") || (lp_abi == "Yoink") || (lp_abi == "ParasiticBomb") || (lp_abi == "ViperConsumeStructure") || (lp_abi == "DarkArchonSCBWFeedback") || (lp_abi == "DarkArchonSCBWMindControl") || (lp_abi == "DarkArchonSCBWMaelstrom") || (lp_abi == "CorsairSCBWDisruptionWeb") || (lp_abi == "ArbiterSCBWRecall") || (lp_abi == "ArbiterSCBWStasisField") || (lp_abi == "MedicSCBWRestoration") || (lp_abi == "MedicSCBWOpticFlare") || (lp_abi == "GhostSCBWLockdown") || (lp_abi == "GhostSCBWNuclearStrike") || (lp_abi == "VulturePlaceSpiderMineSCBW") || (lp_abi == "ScienceVesselSCBWDefensiveMatrix") || (lp_abi == "ScienceVesselSCBWEMPShockwave") || (lp_abi == "ScienceVesselSCBWIrradiate") || (lp_abi == "BattlecruiserSCBWYamato") || (lp_abi == "QueenSCBWParasite") || (lp_abi == "QueenSCBWSpawnBroodlings") || (lp_abi == "QueenSCBWEnsnare") || (lp_abi == "QueenSCBWInfestCommandCenter") || (lp_abi == "DefilerSCBWDarkSwarm") || (lp_abi == "DefilerSCBWPlague") || (lp_abi == "DefilerSCBWConsume") || (lp_abi == "DropshipSCBWSpeedBoost"))) {
        return true;
    }
    else {
        return false;
    }
}

bool lib6F383DA1_gf_abilitiesUsedIsEmpty (int lp_playerSlot) {
    // Automatic Variable Declarations
    // Implementation
    if ((lib6F383DA1_gv_battleReport.lv_playerBattleStats[lp_playerSlot].lv_abilitiesUsedCount == 0) && (lib6F383DA1_gv_battleReport.lv_playerBattleStats[lp_playerSlot].lv_abilitiesUsedCounts[0] == 0) && (lib6F383DA1_gv_battleReport.lv_playerBattleStats[lp_playerSlot].lv_abilitiesUsed[0] == "")) {
        return true;
    }
    else {
        return false;
    }
}

int lib6F383DA1_gf_HookupFrame (int lp_frameType, string lp_frame) {
    // Variable Declarations
    string lv_frameName;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_frameName = ("UIContainer/FullscreenUpperContainer/" + lp_frame);

    // Implementation
    DialogControlHookupStandard(lp_frameType, lv_frameName);
    DialogControlSetObservedType(DialogControlLastCreated(), c_triggerObservedTypeDefaultObservedPlayerId);
    return DialogControlLastCreated();
}

int lib6F383DA1_gf_OppositePlayerSlot (int lp_playerSlot) {
    // Automatic Variable Declarations
    int autoCA601FC8_val;

    // Implementation
    autoCA601FC8_val = lp_playerSlot;
    if (autoCA601FC8_val == 0) {
        return 1;
    }
    else if (autoCA601FC8_val == 1) {
        return 0;
    }
    else {
    }
    return -1;
}

text lib6F383DA1_gf_PlayerNameColored (int lp_player) {
    // Variable Declarations
    text lv_text;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_text = (StringExternal("Param/Value/lib_6F383DA1_F5756159") + StringToText(libNtve_gf_ConvertColorToString(libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(lp_player, false)))) + StringExternal("Param/Value/lib_6F383DA1_DE6DCCEB") + PlayerName(lp_player) + StringExternal("Param/Value/lib_6F383DA1_C21F84BE"));

    // Implementation
    return lv_text;
}

// Triggers
//--------------------------------------------------------------------------------------------------
// Trigger: BattleReport Init
//--------------------------------------------------------------------------------------------------
bool lib6F383DA1_gt_BattleReportInit_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    if ((PlayerGroupCount(PlayerGroupActive()) == 2) && (PlayerGroupCount(GameAttributePlayersForTeam(1)) == 1) && (PlayerGroupCount(GameAttributePlayersForTeam(2)) == 1)) {
        TriggerExecute(lib6F383DA1_gt_InitUI, true, true);
        TriggerExecute(lib6F383DA1_gt_ForbidPlayerAccess, true, true);
        TriggerEnable(lib6F383DA1_gt_SetBattleStarted, true);
        TriggerEnable(lib6F383DA1_gt_SetBattleEnded, true);
        TriggerEnable(lib6F383DA1_gt_SetBattleReportOKtoClear, true);
        TriggerEnable(lib6F383DA1_gt_TrackUnitKills, true);
        TriggerEnable(lib6F383DA1_gt_TrackDamage, true);
        TriggerEnable(lib6F383DA1_gt_TrackAbility, true);
    }

    if ((PlayerGroupCount(PlayerGroupActive()) > 2)) {
        TriggerExecute(lib6F383DA1_gt_InitUI, true, true);
        TriggerExecute(lib6F383DA1_gt_ForbidPlayerAccess, true, true);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void lib6F383DA1_gt_BattleReportInit_Init () {
    lib6F383DA1_gt_BattleReportInit = TriggerCreate("lib6F383DA1_gt_BattleReportInit_Func");
    TriggerAddEventMapInit(lib6F383DA1_gt_BattleReportInit);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Hookup UI
//--------------------------------------------------------------------------------------------------
bool lib6F383DA1_gt_InitUI_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_i;
    string lv_buttonCount;

    // Automatic Variable Declarations
    const int autoD56E5F78_ae = 11;
    const int autoD56E5F78_ai = 1;
    const int autoDB96AD10_ae = 11;
    const int autoDB96AD10_ai = 1;
    const int auto3D7286C4_ae = 9;
    const int auto3D7286C4_ai = 1;
    const int auto44B6E6B4_ae = 9;
    const int auto44B6E6B4_ai = 1;

    // Variable Initialization
    lv_buttonCount = "";

    // Actions
    if (!runActions) {
        return true;
    }

    lib6F383DA1_gv_battleReport.lv_UI.lv_battleReportContainer = lib6F383DA1_gf_HookupFrame(c_triggerControlTypePanel, "BattleReport");
    lib6F383DA1_gv_battleReport.lv_UI.lv_showHideButton = lib6F383DA1_gf_HookupFrame(c_triggerControlTypeButton, "ShowHideUI");
    lib6F383DA1_gv_battleReport.lv_UI.lv_battleLengthTimer = lib6F383DA1_gf_HookupFrame(c_triggerControlTypeLabel, "BattleReport/TitleFrame/BattleLengthFrame/Value");
    lib6F383DA1_gv_battleReport.lv_UI.lv_countdownWarningLabel = lib6F383DA1_gf_HookupFrame(c_triggerControlTypeLabel, "BattleReport/TitleFrame/EndingLabel");
    lib6F383DA1_gv_battleReport.lv_UI.lv_countdownTimer = lib6F383DA1_gf_HookupFrame(c_triggerControlTypeLabel, "BattleReport/TitleFrame/EndingValue");
    lib6F383DA1_gv_battleReport.lv_UI.lv_playerId[0] = lib6F383DA1_gf_HookupFrame(c_triggerControlTypeLabel, "BattleReport/PlayerName1/pId");
    lib6F383DA1_gv_battleReport.lv_UI.lv_playerId[1] = lib6F383DA1_gf_HookupFrame(c_triggerControlTypeLabel, "BattleReport/PlayerName2/pId");
    lib6F383DA1_gv_battleReport.lv_UI.lv_playerName[0] = lib6F383DA1_gf_HookupFrame(c_triggerControlTypeLabel, "BattleReport/PlayerName1/pName");
    lib6F383DA1_gv_battleReport.lv_UI.lv_playerName[1] = lib6F383DA1_gf_HookupFrame(c_triggerControlTypeLabel, "BattleReport/PlayerName2/pName");
    lib6F383DA1_gv_battleReport.lv_UI.lv_playerNameBG[0] = lib6F383DA1_gf_HookupFrame(c_triggerControlTypeImage, "BattleReport/PlayerName1/Blur/Header");
    lib6F383DA1_gv_battleReport.lv_UI.lv_playerNameBG[1] = lib6F383DA1_gf_HookupFrame(c_triggerControlTypeImage, "BattleReport/PlayerName2/Blur/Header");
    lib6F383DA1_gv_battleReport.lv_UI.lv_playerRaceIcon[0] = lib6F383DA1_gf_HookupFrame(c_triggerControlTypeImage, "BattleReport/PlayerName1/RaceIcon");
    lib6F383DA1_gv_battleReport.lv_UI.lv_playerRaceIcon[1] = lib6F383DA1_gf_HookupFrame(c_triggerControlTypeImage, "BattleReport/PlayerName2/RaceIcon");
    lib6F383DA1_gv_battleReport.lv_UI.lv_damageDealt[0] = lib6F383DA1_gf_HookupFrame(c_triggerControlTypeLabel, "BattleReport/PlayerReport1/DmgValue");
    lib6F383DA1_gv_battleReport.lv_UI.lv_damageDealt[1] = lib6F383DA1_gf_HookupFrame(c_triggerControlTypeLabel, "BattleReport/PlayerReport2/DmgValue");
    lib6F383DA1_gv_battleReport.lv_UI.lv_totalUnitsLost[0] = lib6F383DA1_gf_HookupFrame(c_triggerControlTypeLabel, "BattleReport/PlayerReport1/UnitsKilledValue");
    lib6F383DA1_gv_battleReport.lv_UI.lv_totalUnitsLost[1] = lib6F383DA1_gf_HookupFrame(c_triggerControlTypeLabel, "BattleReport/PlayerReport2/UnitsKilledValue");
    lib6F383DA1_gv_battleReport.lv_UI.lv_healthbarFrame = lib6F383DA1_gf_HookupFrame(c_triggerControlTypePanel, "BattleReport/GraphsFrame/DamageDealtBarGraph");
    lib6F383DA1_gv_battleReport.lv_UI.lv_healthbarCurrent[0] = lib6F383DA1_gf_HookupFrame(c_triggerControlTypeImage, "BattleReport/GraphsFrame/DamageDealtBarGraph/Player1Graph");
    lib6F383DA1_gv_battleReport.lv_UI.lv_healthbarCurrent[1] = lib6F383DA1_gf_HookupFrame(c_triggerControlTypeImage, "BattleReport/GraphsFrame/DamageDealtBarGraph/Player2Graph");
    lib6F383DA1_gv_battleReport.lv_UI.lv_healthbarMVPUnitDmg[0] = lib6F383DA1_gf_HookupFrame(c_triggerControlTypeImage, "BattleReport/PlayerReport1/BarGraphFrame/Blur/MVPUnitTypeDamage");
    lib6F383DA1_gv_battleReport.lv_UI.lv_healthbarMVPUnitDmg[1] = lib6F383DA1_gf_HookupFrame(c_triggerControlTypeImage, "BattleReport/PlayerReport2/BarGraphFrame/Blur/MVPUnitTypeDamage");
    lib6F383DA1_gv_battleReport.lv_UI.lv_mineralsLost[0] = lib6F383DA1_gf_HookupFrame(c_triggerControlTypeLabel, "BattleReport/PlayerReport1/ResourcesLostFrame/ResourcesLostMineralsValue");
    lib6F383DA1_gv_battleReport.lv_UI.lv_mineralsLost[1] = lib6F383DA1_gf_HookupFrame(c_triggerControlTypeLabel, "BattleReport/PlayerReport2/ResourcesLostFrame/ResourcesLostMineralsValue");
    lib6F383DA1_gv_battleReport.lv_UI.lv_gasLost[0] = lib6F383DA1_gf_HookupFrame(c_triggerControlTypeLabel, "BattleReport/PlayerReport1/ResourcesLostFrame/ResourcesLostGasValue");
    lib6F383DA1_gv_battleReport.lv_UI.lv_gasLost[1] = lib6F383DA1_gf_HookupFrame(c_triggerControlTypeLabel, "BattleReport/PlayerReport2/ResourcesLostFrame/ResourcesLostGasValue");
    lib6F383DA1_gv_battleReport.lv_UI.lv_suppliesLost[0] = lib6F383DA1_gf_HookupFrame(c_triggerControlTypeLabel, "BattleReport/PlayerReport1/ResourcesLostFrame/ResourcesLostSupplyValue");
    lib6F383DA1_gv_battleReport.lv_UI.lv_suppliesLost[1] = lib6F383DA1_gf_HookupFrame(c_triggerControlTypeLabel, "BattleReport/PlayerReport2/ResourcesLostFrame/ResourcesLostSupplyValue");
    lib6F383DA1_gv_battleReport.lv_UI.lv_mineralsLostIcon[0] = lib6F383DA1_gf_HookupFrame(c_triggerControlTypeImage, "BattleReport/PlayerReport1/ResourcesLostFrame/ResourcesLostMinerals");
    lib6F383DA1_gv_battleReport.lv_UI.lv_mineralsLostIcon[1] = lib6F383DA1_gf_HookupFrame(c_triggerControlTypeImage, "BattleReport/PlayerReport2/ResourcesLostFrame/ResourcesLostMinerals");
    lib6F383DA1_gv_battleReport.lv_UI.lv_gasLostIcon[0] = lib6F383DA1_gf_HookupFrame(c_triggerControlTypeImage, "BattleReport/PlayerReport1/ResourcesLostFrame/ResourcesLostGas");
    lib6F383DA1_gv_battleReport.lv_UI.lv_gasLostIcon[1] = lib6F383DA1_gf_HookupFrame(c_triggerControlTypeImage, "BattleReport/PlayerReport2/ResourcesLostFrame/ResourcesLostGas");
    lib6F383DA1_gv_battleReport.lv_UI.lv_suppliesLostIcon[0] = lib6F383DA1_gf_HookupFrame(c_triggerControlTypeImage, "BattleReport/PlayerReport1/ResourcesLostFrame/ResourcesLostSupply");
    lib6F383DA1_gv_battleReport.lv_UI.lv_suppliesLostIcon[1] = lib6F383DA1_gf_HookupFrame(c_triggerControlTypeImage, "BattleReport/PlayerReport2/ResourcesLostFrame/ResourcesLostSupply");
    lib6F383DA1_gv_battleReport.lv_UI.lv_mineralsLostBar[0] = lib6F383DA1_gf_HookupFrame(c_triggerControlTypeImage, "BattleReport/GraphsFrame/MineralsLostBarGraph/Player1Graph");
    lib6F383DA1_gv_battleReport.lv_UI.lv_mineralsLostBar[1] = lib6F383DA1_gf_HookupFrame(c_triggerControlTypeImage, "BattleReport/GraphsFrame/MineralsLostBarGraph/Player2Graph");
    lib6F383DA1_gv_battleReport.lv_UI.lv_gasLostBar[0] = lib6F383DA1_gf_HookupFrame(c_triggerControlTypeImage, "BattleReport/GraphsFrame/GasLostBarGraph/Player1Graph");
    lib6F383DA1_gv_battleReport.lv_UI.lv_gasLostBar[1] = lib6F383DA1_gf_HookupFrame(c_triggerControlTypeImage, "BattleReport/GraphsFrame/GasLostBarGraph/Player2Graph");
    lv_i = 0;
    for ( ; ( (autoD56E5F78_ai >= 0 && lv_i <= autoD56E5F78_ae) || (autoD56E5F78_ai < 0 && lv_i >= autoD56E5F78_ae) ) ; lv_i += autoD56E5F78_ai ) {
        lv_buttonCount = lib6F383DA1_gf_ZeroPadInt((lv_i + 1), 2);
        lib6F383DA1_gv_battleReport.lv_UI.lv_killedUnitButtons[0][lv_i] = lib6F383DA1_gf_HookupFrame(c_triggerControlTypeButton, ("BattleReport/PlayerReport1/UnitButtons/Unit" + lv_buttonCount));
        lib6F383DA1_gv_battleReport.lv_UI.lv_killedUnitCountBG[0][lv_i] = lib6F383DA1_gf_HookupFrame(c_triggerControlTypeImage, ("BattleReport/PlayerReport1/UnitButtons/Unit" + lv_buttonCount + "/Blur/NumberBackground"));
        lib6F383DA1_gv_battleReport.lv_UI.lv_killledUnitTypes[0][lv_i] = lib6F383DA1_gf_HookupFrame(c_triggerControlTypeImage, ("BattleReport/PlayerReport1/UnitButtons/Unit" + lv_buttonCount + "/NormalImage"));
        lib6F383DA1_gv_battleReport.lv_UI.lv_killedUnitCounts[0][lv_i] = lib6F383DA1_gf_HookupFrame(c_triggerControlTypeLabel, ("BattleReport/PlayerReport1/UnitButtons/Unit" + lv_buttonCount + "/Label"));
    }
    lv_i = 0;
    for ( ; ( (autoDB96AD10_ai >= 0 && lv_i <= autoDB96AD10_ae) || (autoDB96AD10_ai < 0 && lv_i >= autoDB96AD10_ae) ) ; lv_i += autoDB96AD10_ai ) {
        lv_buttonCount = lib6F383DA1_gf_ZeroPadInt((lv_i + 1), 2);
        lib6F383DA1_gv_battleReport.lv_UI.lv_killedUnitButtons[1][lv_i] = lib6F383DA1_gf_HookupFrame(c_triggerControlTypeButton, ("BattleReport/PlayerReport2/UnitButtons/Unit" + lv_buttonCount));
        lib6F383DA1_gv_battleReport.lv_UI.lv_killedUnitCountBG[1][lv_i] = lib6F383DA1_gf_HookupFrame(c_triggerControlTypeImage, ("BattleReport/PlayerReport2/UnitButtons/Unit" + lv_buttonCount + "/Blur/NumberBackground"));
        lib6F383DA1_gv_battleReport.lv_UI.lv_killledUnitTypes[1][lv_i] = lib6F383DA1_gf_HookupFrame(c_triggerControlTypeImage, ("BattleReport/PlayerReport2/UnitButtons/Unit" + lv_buttonCount + "/NormalImage"));
        lib6F383DA1_gv_battleReport.lv_UI.lv_killedUnitCounts[1][lv_i] = lib6F383DA1_gf_HookupFrame(c_triggerControlTypeLabel, ("BattleReport/PlayerReport2/UnitButtons/Unit" + lv_buttonCount + "/Label"));
    }
    lv_i = 0;
    for ( ; ( (auto3D7286C4_ai >= 0 && lv_i <= auto3D7286C4_ae) || (auto3D7286C4_ai < 0 && lv_i >= auto3D7286C4_ae) ) ; lv_i += auto3D7286C4_ai ) {
        lv_buttonCount = lib6F383DA1_gf_ZeroPadInt((lv_i + 1), 2);
        lib6F383DA1_gv_battleReport.lv_UI.lv_abilityButtons[0][lv_i] = lib6F383DA1_gf_HookupFrame(c_triggerControlTypeButton, ("BattleReport/PlayerReport1/AbilityButtons/Abil" + lv_buttonCount));
        lib6F383DA1_gv_battleReport.lv_UI.lv_abilityCountBG[0][lv_i] = lib6F383DA1_gf_HookupFrame(c_triggerControlTypeImage, ("BattleReport/PlayerReport1/AbilityButtons/Abil" + lv_buttonCount + "/Blur/NumberBackground"));
        lib6F383DA1_gv_battleReport.lv_UI.lv_abilityTypes[0][lv_i] = lib6F383DA1_gf_HookupFrame(c_triggerControlTypeImage, ("BattleReport/PlayerReport1/AbilityButtons/Abil" + lv_buttonCount + "/NormalImage"));
        lib6F383DA1_gv_battleReport.lv_UI.lv_abilityTypeCounts[0][lv_i] = lib6F383DA1_gf_HookupFrame(c_triggerControlTypeLabel, ("BattleReport/PlayerReport1/AbilityButtons/Abil" + lv_buttonCount + "/Label"));
    }
    lv_i = 0;
    for ( ; ( (auto44B6E6B4_ai >= 0 && lv_i <= auto44B6E6B4_ae) || (auto44B6E6B4_ai < 0 && lv_i >= auto44B6E6B4_ae) ) ; lv_i += auto44B6E6B4_ai ) {
        lv_buttonCount = lib6F383DA1_gf_ZeroPadInt((lv_i + 1), 2);
        lib6F383DA1_gv_battleReport.lv_UI.lv_abilityButtons[1][lv_i] = lib6F383DA1_gf_HookupFrame(c_triggerControlTypeButton, ("BattleReport/PlayerReport2/AbilityButtons/Abil" + lv_buttonCount));
        lib6F383DA1_gv_battleReport.lv_UI.lv_abilityCountBG[1][lv_i] = lib6F383DA1_gf_HookupFrame(c_triggerControlTypeImage, ("BattleReport/PlayerReport2/AbilityButtons/Abil" + lv_buttonCount + "/Blur/NumberBackground"));
        lib6F383DA1_gv_battleReport.lv_UI.lv_abilityTypes[1][lv_i] = lib6F383DA1_gf_HookupFrame(c_triggerControlTypeImage, ("BattleReport/PlayerReport2/AbilityButtons/Abil" + lv_buttonCount + "/NormalImage"));
        lib6F383DA1_gv_battleReport.lv_UI.lv_abilityTypeCounts[1][lv_i] = lib6F383DA1_gf_HookupFrame(c_triggerControlTypeLabel, ("BattleReport/PlayerReport2/AbilityButtons/Abil" + lv_buttonCount + "/Label"));
    }
    lib6F383DA1_gv_battleReport.lv_UI.lv_mVPUnitTypeButtons[0] = lib6F383DA1_gf_HookupFrame(c_triggerControlTypeButton, "BattleReport/PlayerReport1/MVPUnitType/MVPUnitTypeButton");
    lib6F383DA1_gv_battleReport.lv_UI.lv_mVPUnitTypeButtons[1] = lib6F383DA1_gf_HookupFrame(c_triggerControlTypeButton, "BattleReport/PlayerReport2/MVPUnitType/MVPUnitTypeButton");
    lib6F383DA1_gv_battleReport.lv_UI.lv_mVPUnitTypeIcon[0] = lib6F383DA1_gf_HookupFrame(c_triggerControlTypeImage, "BattleReport/PlayerReport1/MVPUnitType/MVPUnitTypeButton/NormalImage");
    lib6F383DA1_gv_battleReport.lv_UI.lv_mVPUnitTypeIcon[1] = lib6F383DA1_gf_HookupFrame(c_triggerControlTypeImage, "BattleReport/PlayerReport2/MVPUnitType/MVPUnitTypeButton/NormalImage");
    lib6F383DA1_gv_battleReport.lv_UI.lv_mVPUnitTypeDmg[0] = lib6F383DA1_gf_HookupFrame(c_triggerControlTypeLabel, "BattleReport/PlayerReport1/MVPUnitType/MVPUnitTypeDamageValue");
    lib6F383DA1_gv_battleReport.lv_UI.lv_mVPUnitTypeDmg[1] = lib6F383DA1_gf_HookupFrame(c_triggerControlTypeLabel, "BattleReport/PlayerReport2/MVPUnitType/MVPUnitTypeDamageValue");
    libNtve_gf_SetDialogItemColor(lib6F383DA1_gv_battleReport.lv_UI.lv_playerNameBG[0], libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(1, false)), PlayerGroupAll());
    libNtve_gf_SetDialogItemColor(lib6F383DA1_gv_battleReport.lv_UI.lv_playerNameBG[1], libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(2, false)), PlayerGroupAll());
    libNtve_gf_SetDialogItemDesaturationColor(lib6F383DA1_gv_battleReport.lv_UI.lv_healthbarCurrent[0], libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(1, false)), PlayerGroupAll());
    libNtve_gf_SetDialogItemDesaturationColor(lib6F383DA1_gv_battleReport.lv_UI.lv_healthbarCurrent[1], libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(2, false)), PlayerGroupAll());
    libNtve_gf_SetDialogItemDesaturationColor(lib6F383DA1_gv_battleReport.lv_UI.lv_mineralsLostBar[0], libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(1, false)), PlayerGroupAll());
    libNtve_gf_SetDialogItemDesaturationColor(lib6F383DA1_gv_battleReport.lv_UI.lv_mineralsLostBar[1], libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(2, false)), PlayerGroupAll());
    libNtve_gf_SetDialogItemDesaturationColor(lib6F383DA1_gv_battleReport.lv_UI.lv_gasLostBar[0], libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(1, false)), PlayerGroupAll());
    libNtve_gf_SetDialogItemDesaturationColor(lib6F383DA1_gv_battleReport.lv_UI.lv_gasLostBar[1], libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(2, false)), PlayerGroupAll());
    DialogControlFadeTransparency(lib6F383DA1_gv_battleReport.lv_UI.lv_playerNameBG[0], PlayerGroupAll(), 0.0, 50.0);
    DialogControlFadeTransparency(lib6F383DA1_gv_battleReport.lv_UI.lv_playerNameBG[1], PlayerGroupAll(), 0.0, 50.0);
    libNtve_gf_SetDialogItemText(lib6F383DA1_gv_battleReport.lv_UI.lv_playerName[0], PlayerName(1), PlayerGroupAll());
    libNtve_gf_SetDialogItemText(lib6F383DA1_gv_battleReport.lv_UI.lv_playerName[1], PlayerName(2), PlayerGroupAll());
    DialogControlSetVisible(lib6F383DA1_gv_battleReport.lv_UI.lv_battleReportContainer, PlayerGroupAll(), false);
    DialogControlSetVisible(lib6F383DA1_gv_battleReport.lv_UI.lv_mVPUnitTypeDmg[0], PlayerGroupAll(), false);
    DialogControlSetVisible(lib6F383DA1_gv_battleReport.lv_UI.lv_mVPUnitTypeDmg[1], PlayerGroupAll(), false);
    DialogControlSetVisible(lib6F383DA1_gv_battleReport.lv_UI.lv_mVPUnitTypeButtons[0], PlayerGroupAll(), false);
    DialogControlSetVisible(lib6F383DA1_gv_battleReport.lv_UI.lv_mVPUnitTypeButtons[1], PlayerGroupAll(), false);
    DialogControlSetVisible(lib6F383DA1_gv_battleReport.lv_UI.lv_mVPUnitTypeIcon[0], PlayerGroupAll(), false);
    DialogControlSetVisible(lib6F383DA1_gv_battleReport.lv_UI.lv_mVPUnitTypeIcon[1], PlayerGroupAll(), false);
    libNtve_gf_SetDialogItemText(lib6F383DA1_gv_battleReport.lv_UI.lv_playerId[0], StringExternal("Param/Value/lib_6F383DA1_F4DC6925"), PlayerGroupAll());
    libNtve_gf_SetDialogItemText(lib6F383DA1_gv_battleReport.lv_UI.lv_playerId[1], StringExternal("Param/Value/lib_6F383DA1_205CCEA5"), PlayerGroupAll());
    lib6F383DA1_gf_setPlayerRaceIcons(0, PlayerRace(1));
    lib6F383DA1_gf_setPlayerRaceIcons(1, PlayerRace(2));
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib6F383DA1_gt_InitUI_Init () {
    lib6F383DA1_gt_InitUI = TriggerCreate("lib6F383DA1_gt_InitUI_Func");
    TriggerEnable(lib6F383DA1_gt_InitUI, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Forbid Player Access
//--------------------------------------------------------------------------------------------------
bool lib6F383DA1_gt_ForbidPlayerAccess_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    DialogControlSetEnabled(lib6F383DA1_gv_battleReport.lv_UI.lv_showHideButton, PlayerGroupActive(), false);
    DialogControlSetEnabled(lib6F383DA1_gv_battleReport.lv_UI.lv_showHideButton, PlayerGroupSingle(CatalogFieldValueGetAsInt(c_gameCatalogGameUI, "CoreDflt", "DefaultObservedPlayerId", c_playerAny)), true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib6F383DA1_gt_ForbidPlayerAccess_Init () {
    lib6F383DA1_gt_ForbidPlayerAccess = TriggerCreate("lib6F383DA1_gt_ForbidPlayerAccess_Func");
    TriggerEnable(lib6F383DA1_gt_ForbidPlayerAccess, false);
    TriggerAddEventMapInit(lib6F383DA1_gt_ForbidPlayerAccess);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Set Battle Started
//--------------------------------------------------------------------------------------------------
bool lib6F383DA1_gt_SetBattleStarted_Func (bool testConds, bool runActions) {
    // Variable Declarations
    string lv_unitType;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_unitType = UnitGetType(EventUnitDamageSourceUnit());

    // Conditions
    if (testConds) {
        if (!((EventPlayer() > 0))) {
            return false;
        }

        if (!((EventPlayer() < 3))) {
            return false;
        }

        if (!((lv_unitType != "OrbitalCommand"))) {
            return false;
        }

        if (!((EventUnitDamageAbsorbed() > 0.0))) {
            return false;
        }

        if (!((lib6F383DA1_gf_fightStarted() == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lib6F383DA1_gf_clearBattleReportData(0);
    lib6F383DA1_gf_clearBattleReportData(1);
    if (lib6F383DA1_gf_isOKToClearReport()) {
        lib6F383DA1_gf_clearBattleReportUI(0);
        lib6F383DA1_gf_clearBattleReportUI(1);
    }

    lib6F383DA1_gv_battleReport.lv_playersAreFighting = true;
    lib6F383DA1_gv_battleReport.lv_battleLengthSeconds = 0;
    TimerRestart(lib6F383DA1_gv_battleReport.lv_battleEndingTimer);
    TimerStart(lib6F383DA1_gv_battleReport.lv_battleEndingTimer, lib6F383DA1_gv_BATTLE_CUTOFF_LENGTH, false, c_timeReal);
    Wait(1.0, c_timeReal);
    lib6F383DA1_gf_startBattleTimer();
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib6F383DA1_gt_SetBattleStarted_Init () {
    lib6F383DA1_gt_SetBattleStarted = TriggerCreate("lib6F383DA1_gt_SetBattleStarted_Func");
    TriggerEnable(lib6F383DA1_gt_SetBattleStarted, false);
    TriggerAddEventUnitDamaged(lib6F383DA1_gt_SetBattleStarted, null, c_unitDamageTypeAny, c_unitDamageEither, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Set Battle Ended
//--------------------------------------------------------------------------------------------------
bool lib6F383DA1_gt_SetBattleEnded_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!(lib6F383DA1_gf_fightStarted())) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lib6F383DA1_gv_battleReport.lv_playersAreFighting = false;
    libNtve_gf_StopTimer(lib6F383DA1_gv_battleReport.lv_battleEndingTimer);
    if (lib6F383DA1_gf_isOKToClearReport()) {
        lib6F383DA1_gv_battleReport.lv_UI.lv_battleReportReadyToClear = false;
        libNtve_gf_StopTimer(lib6F383DA1_gv_battleReport.lv_battleReportDisplayTimer);
        TimerStart(lib6F383DA1_gv_battleReport.lv_battleReportDisplayTimer, lib6F383DA1_gv_BATTLE_REPORT_DISPLAY_LENGTH, false, c_timeReal);
        lib6F383DA1_gv_battleReport.lv_battleReportDisplayTimer = TimerLastStarted();
    }

    lib6F383DA1_gf_updateClearReportTimer();
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib6F383DA1_gt_SetBattleEnded_Init () {
    lib6F383DA1_gt_SetBattleEnded = TriggerCreate("lib6F383DA1_gt_SetBattleEnded_Func");
    TriggerEnable(lib6F383DA1_gt_SetBattleEnded, false);
    TriggerAddEventTimer(lib6F383DA1_gt_SetBattleEnded, lib6F383DA1_gv_battleReport.lv_battleEndingTimer);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Set Battle Report OK to Clear
//--------------------------------------------------------------------------------------------------
bool lib6F383DA1_gt_SetBattleReportOKtoClear_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_playerSlot;

    // Automatic Variable Declarations
    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    lib6F383DA1_gv_battleReport.lv_UI.lv_battleReportReadyToClear = true;
    lib6F383DA1_gf_clearBattleReportUI(0);
    lib6F383DA1_gf_clearBattleReportUI(1);
    lib6F383DA1_gf_updateBattleReportValues();
    DialogControlSetVisible(lib6F383DA1_gv_battleReport.lv_UI.lv_countdownWarningLabel, PlayerGroupAll(), false);
    DialogControlSetVisible(lib6F383DA1_gv_battleReport.lv_UI.lv_countdownTimer, PlayerGroupAll(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib6F383DA1_gt_SetBattleReportOKtoClear_Init () {
    lib6F383DA1_gt_SetBattleReportOKtoClear = TriggerCreate("lib6F383DA1_gt_SetBattleReportOKtoClear_Func");
    TriggerEnable(lib6F383DA1_gt_SetBattleReportOKtoClear, false);
    TriggerAddEventTimer(lib6F383DA1_gt_SetBattleReportOKtoClear, lib6F383DA1_gv_battleReport.lv_battleReportDisplayTimer);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Track Unit Kills
//--------------------------------------------------------------------------------------------------
bool lib6F383DA1_gt_TrackUnitKills_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_deadUnit;
    string lv_killedUnitType;
    int lv_killingUnitOwner;
    int lv_gasCost;
    int lv_mineralCost;
    fixed lv_supplyCost;
    fixed lv_totalResourcesLost;
    fixed lv_maxBarWidth;
    int lv_testInteger;
    int lv_playerSlot;
    int lv_oppositePlayerSlot;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_deadUnit = EventUnit();
    lv_killedUnitType = UnitGetType(lv_deadUnit);
    lv_killingUnitOwner = UnitGetOwner(libNtve_gf_KillingUnit());
    lv_gasCost = UnitTypeGetCost(UnitGetType(lv_deadUnit), c_unitCostVespene);
    lv_mineralCost = UnitTypeGetCost(UnitGetType(lv_deadUnit), c_unitCostMinerals);
    lv_supplyCost = UnitGetPropertyFixed(lv_deadUnit, c_unitPropSuppliesUsed, c_unitPropNormal);
    lv_maxBarWidth = lib6F383DA1_gv_BAR_GRAPH_WIDTH;
    lv_playerSlot = (libNtve_gf_KillingPlayer() - 1);
    lv_oppositePlayerSlot = lib6F383DA1_gf_OppositePlayerSlot(lv_playerSlot);

    // Conditions
    if (testConds) {
        if (!(lib6F383DA1_gf_fightStarted())) {
            return false;
        }

        if (!(lib6F383DA1_gf_unitIsAllowed(lv_deadUnit))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((lv_playerSlot == 15)) {
        lv_playerSlot = lib6F383DA1_gf_OppositePlayerSlot((UnitGetOwner(lv_deadUnit) - 1));
    }

    if ((lv_playerSlot > 1)) {
        return true;
    }

    if ((lib6F383DA1_gf_isStructure(lv_killedUnitType) == false)) {
        lib6F383DA1_gv_battleReport.lv_playerBattleStats[lv_playerSlot].lv_totalUnitsLost += 1;
        lv_killedUnitType = (lib6F383DA1_gf_removeStringFromUnitType(lv_killedUnitType, "Sieged"));
        lv_killedUnitType = (lib6F383DA1_gf_removeStringFromUnitType(lv_killedUnitType, "@Burrowed"));
        lv_killedUnitType = (lib6F383DA1_gf_removeStringFromUnitType(lv_killedUnitType, "Burrowed"));
        lv_killedUnitType = (lib6F383DA1_gf_removeStringFromUnitType(lv_killedUnitType, "SiegeMode"));
        lv_killedUnitType = (lib6F383DA1_gf_removeStringFromUnitType(lv_killedUnitType, "Cocoon"));
        if ((EventUnitDamageDeathCheck(c_deathTypeRemove) == true)) {
            return true;
        }

        if ((lv_killedUnitType == "ThorAP")) {
            lv_killedUnitType = "Thor";
        }

        if ((lv_killedUnitType == "LurkerMPEgg")) {
            lv_killedUnitType = "Lurker";
        }

        if ((lv_killedUnitType == "LocustMPFlying")) {
            lv_killedUnitType = "LocustMP";
        }

        if ((lv_killedUnitType == "Baneling")) {
            lv_playerSlot = (UnitGetOwner(lv_deadUnit) - 1);
        }

        if ((lv_killedUnitType == "InfestedTerranSCBW")) {
            lv_playerSlot = (UnitGetOwner(lv_deadUnit) - 1);
        }

        if ((lv_killedUnitType == "ScourgeSCBW")) {
            lv_playerSlot = (UnitGetOwner(lv_deadUnit) - 1);
        }

        if ((lv_killedUnitType == "LurkerSCBWEgg")) {
            lv_killedUnitType = "LurkerSCBW";
        }

        if ((lv_killedUnitType == "DevourerSCBWEgg")) {
            lv_killedUnitType = "DevourerSCBW";
        }

        if ((lv_killedUnitType == "GuardianSCBWEgg")) {
            lv_killedUnitType = "GuardianSCBW";
        }

        lib6F383DA1_gf_addUnitKilled(lv_playerSlot, lv_killedUnitType);
    }

    if ((lib6F383DA1_gf_isCocoon(UnitGetType(lv_deadUnit)) || (UnitGetType(lv_deadUnit) == "LurkerMPEgg") || (UnitGetType(lv_deadUnit) == "LurkerSCBWEgg") || (UnitGetType(lv_deadUnit) == "DevourerSCBWEgg") || (UnitGetType(lv_deadUnit) == "GuardianSCBWEgg"))) {
        lv_mineralCost = FixedToInt(Round((lv_mineralCost * 0.25)));
        lv_gasCost = FixedToInt(Round((lv_gasCost * 0.25)));
    }

    lib6F383DA1_gv_battleReport.lv_playerBattleStats[lv_playerSlot].lv_mineralsLost += lv_mineralCost;
    lib6F383DA1_gv_battleReport.lv_playerBattleStats[lv_playerSlot].lv_gasLost += lv_gasCost;
    lib6F383DA1_gv_battleReport.lv_playerBattleStats[lv_playerSlot].lv_suppliesLost += lv_supplyCost;
    lib6F383DA1_gf_updateResourcesLostDisplay(lv_playerSlot);
    lv_totalResourcesLost = lib6F383DA1_gf_getTotalResourcesLost();
    if ((lv_totalResourcesLost > 0.0)) {
        lib6F383DA1_gf_updateResourcesLostGraphs(0, lv_totalResourcesLost, FixedToInt(lv_maxBarWidth));
        lib6F383DA1_gf_updateResourcesLostGraphs(1, lv_totalResourcesLost, FixedToInt(lv_maxBarWidth));
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void lib6F383DA1_gt_TrackUnitKills_Init () {
    lib6F383DA1_gt_TrackUnitKills = TriggerCreate("lib6F383DA1_gt_TrackUnitKills_Func");
    TriggerEnable(lib6F383DA1_gt_TrackUnitKills, false);
    TriggerAddEventUnitDied(lib6F383DA1_gt_TrackUnitKills, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Track Damage
//--------------------------------------------------------------------------------------------------
bool lib6F383DA1_gt_TrackDamage_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_playerSlot;
    unit lv_attackingUnit;
    string lv_attackingUnitType;
    string lv_abilityUsed;
    fixed lv_barWidth;
    int lv_mvpUnitIndex;
    fixed lv_mvpUnitDamage;
    fixed lv_playerDamageDealt;
    fixed lv_newBarWidth;
    int lv_i;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_playerSlot = (EventUnitDamageSourcePlayer() - 1);
    lv_attackingUnit = EventUnitDamageSourceUnit();
    lv_attackingUnitType = UnitGetType(EventUnitDamageSourceUnit());
    lv_barWidth = lib6F383DA1_gv_BAR_GRAPH_WIDTH;

    // Conditions
    if (testConds) {
        if (!(((lv_playerSlot == 0) || (lv_playerSlot == 1)))) {
            return false;
        }

        if (!((EventUnitDamageAbsorbed() > 0.0))) {
            return false;
        }

        if (!(lib6F383DA1_gf_fightStarted())) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TimerRestart(lib6F383DA1_gv_battleReport.lv_battleEndingTimer);
    lib6F383DA1_gf_catchDamageDealingAbility(lv_playerSlot, lv_attackingUnitType, EventUnitDamageEffect());
    lib6F383DA1_gv_battleReport.lv_playerBattleStats[lv_playerSlot].lv_damageDealt += Round(EventUnitDamageAbsorbed());
    lib6F383DA1_gf_updateDamageDisplay(0, lv_barWidth);
    lib6F383DA1_gf_updateDamageDisplay(1, lv_barWidth);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib6F383DA1_gt_TrackDamage_Init () {
    lib6F383DA1_gt_TrackDamage = TriggerCreate("lib6F383DA1_gt_TrackDamage_Func");
    TriggerEnable(lib6F383DA1_gt_TrackDamage, false);
    TriggerAddEventUnitDamaged(lib6F383DA1_gt_TrackDamage, null, c_unitDamageTypeAny, c_unitDamageEither, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Track Ability
//--------------------------------------------------------------------------------------------------
bool lib6F383DA1_gt_TrackAbility_Func (bool testConds, bool runActions) {
    // Variable Declarations
    string lv_abil;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_abil = AbilityCommandGetAbility(EventUnitAbility());

    // Conditions
    if (testConds) {
        if (!(lib6F383DA1_gf_fightStarted())) {
            return false;
        }

        if (!(lib6F383DA1_gf_abilityIsAllowed(lv_abil))) {
            return false;
        }

        if (!((EventPlayer() > 0))) {
            return false;
        }

        if (!((EventPlayer() < 3))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if (lib6F383DA1_gf_isAbilHallucination(lv_abil)) {
        lib6F383DA1_gf_addAbilityUsed((EventPlayer() - 1), lv_abil, "Assets\\Textures\\btn-ability-protoss-hallucination-color.dds", "Hallucination");
    }
    else {
        lib6F383DA1_gf_addAbilityUsed((EventPlayer() - 1), lv_abil, "", "");
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib6F383DA1_gt_TrackAbility_Init () {
    lib6F383DA1_gt_TrackAbility = TriggerCreate("lib6F383DA1_gt_TrackAbility_Func");
    TriggerEnable(lib6F383DA1_gt_TrackAbility, false);
    TriggerAddEventUnitAbility(lib6F383DA1_gt_TrackAbility, null, null, c_unitAbilStageExecute, false);
}

void lib6F383DA1_InitTriggers () {
    lib6F383DA1_gt_BattleReportInit_Init();
    lib6F383DA1_gt_InitUI_Init();
    lib6F383DA1_gt_ForbidPlayerAccess_Init();
    lib6F383DA1_gt_SetBattleStarted_Init();
    lib6F383DA1_gt_SetBattleEnded_Init();
    lib6F383DA1_gt_SetBattleReportOKtoClear_Init();
    lib6F383DA1_gt_TrackUnitKills_Init();
    lib6F383DA1_gt_TrackDamage_Init();
    lib6F383DA1_gt_TrackAbility_Init();
}

//--------------------------------------------------------------------------------------------------
// Library Initialization
//--------------------------------------------------------------------------------------------------
bool lib6F383DA1_InitLib_completed = false;

void lib6F383DA1_InitLib () {
    if (lib6F383DA1_InitLib_completed) {
        return;
    }

    lib6F383DA1_InitLib_completed = true;

    lib6F383DA1_InitLibraries();
    lib6F383DA1_InitVariables();
    lib6F383DA1_InitTriggers();
}

